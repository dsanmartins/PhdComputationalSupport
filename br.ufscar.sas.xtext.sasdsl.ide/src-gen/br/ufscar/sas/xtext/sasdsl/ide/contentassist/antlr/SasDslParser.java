/*
 * generated by Xtext 2.10.0
 */
package br.ufscar.sas.xtext.sasdsl.ide.contentassist.antlr;

import br.ufscar.sas.xtext.sasdsl.ide.contentassist.antlr.internal.InternalSasDslParser;
import br.ufscar.sas.xtext.sasdsl.services.SasDslGrammarAccess;
import com.google.inject.Inject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

public class SasDslParser extends AbstractContentAssistParser {

	@Inject
	private SasDslGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalSasDslParser createParser() {
		InternalSasDslParser result = new InternalSasDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getDSLAbstractionAccess().getAlternatives(), "rule__DSLAbstraction__Alternatives");
					put(grammarAccess.getDSLCompositionAccess().getAlternatives(), "rule__DSLComposition__Alternatives");
					put(grammarAccess.getDSLRestrictionAccess().getAlternatives(), "rule__DSLRestriction__Alternatives");
					put(grammarAccess.getDSLTypeCLMAccess().getAlternatives(), "rule__DSLTypeCLM__Alternatives");
					put(grammarAccess.getElementTypeAccess().getAlternatives(), "rule__ElementType__Alternatives");
					put(grammarAccess.getBasicTypeAccess().getTypeNameAlternatives_0(), "rule__BasicType__TypeNameAlternatives_0");
					put(grammarAccess.getEntityTypeAccess().getEntityAlternatives_0(), "rule__EntityType__EntityAlternatives_0");
					put(grammarAccess.getArchitectureDefinitionAccess().getGroup(), "rule__ArchitectureDefinition__Group__0");
					put(grammarAccess.getDSLRestrictionAccess().getGroup_0(), "rule__DSLRestriction__Group_0__0");
					put(grammarAccess.getDSLRestrictionAccess().getGroup_1(), "rule__DSLRestriction__Group_1__0");
					put(grammarAccess.getDSLRestrictionAccess().getGroup_2(), "rule__DSLRestriction__Group_2__0");
					put(grammarAccess.getDSLRestrictionAccess().getGroup_3(), "rule__DSLRestriction__Group_3__0");
					put(grammarAccess.getDSLRestrictionAccess().getGroup_4(), "rule__DSLRestriction__Group_4__0");
					put(grammarAccess.getDSLSensorBelongsToAccess().getGroup(), "rule__DSLSensorBelongsTo__Group__0");
					put(grammarAccess.getDSLReferenceInputBelongsToAccess().getGroup(), "rule__DSLReferenceInputBelongsTo__Group__0");
					put(grammarAccess.getDSLEffectorBelongsToAccess().getGroup(), "rule__DSLEffectorBelongsTo__Group__0");
					put(grammarAccess.getDSLMonitorBelongsTo1Access().getGroup(), "rule__DSLMonitorBelongsTo1__Group__0");
					put(grammarAccess.getDSLMonitorBelongsTo2Access().getGroup(), "rule__DSLMonitorBelongsTo2__Group__0");
					put(grammarAccess.getDSLAnalyzerBelongsTo1Access().getGroup(), "rule__DSLAnalyzerBelongsTo1__Group__0");
					put(grammarAccess.getDSLAnalyzerBelongsTo2Access().getGroup(), "rule__DSLAnalyzerBelongsTo2__Group__0");
					put(grammarAccess.getDSLPlannerBelongsTo1Access().getGroup(), "rule__DSLPlannerBelongsTo1__Group__0");
					put(grammarAccess.getDSLPlannerBelongsTo2Access().getGroup(), "rule__DSLPlannerBelongsTo2__Group__0");
					put(grammarAccess.getDSLExecutorBelongsTo1Access().getGroup(), "rule__DSLExecutorBelongsTo1__Group__0");
					put(grammarAccess.getDSLExecutorBelongsTo2Access().getGroup(), "rule__DSLExecutorBelongsTo2__Group__0");
					put(grammarAccess.getDSLClBelongsTo1Access().getGroup(), "rule__DSLClBelongsTo1__Group__0");
					put(grammarAccess.getDSLClBelongsTo2Access().getGroup(), "rule__DSLClBelongsTo2__Group__0");
					put(grammarAccess.getDSLClmBelongsToAccess().getGroup(), "rule__DSLClmBelongsTo__Group__0");
					put(grammarAccess.getDSLMeasuredOuputBelongsToAccess().getGroup(), "rule__DSLMeasuredOuputBelongsTo__Group__0");
					put(grammarAccess.getDSLGaugeBelongsToAccess().getGroup(), "rule__DSLGaugeBelongsTo__Group__0");
					put(grammarAccess.getDSLProbeBelongsToAccess().getGroup(), "rule__DSLProbeBelongsTo__Group__0");
					put(grammarAccess.getDSLManagingAccess().getGroup(), "rule__DSLManaging__Group__0");
					put(grammarAccess.getDSLManagingAccess().getGroup_2(), "rule__DSLManaging__Group_2__0");
					put(grammarAccess.getDSLManagingAccess().getGroup_2_2(), "rule__DSLManaging__Group_2_2__0");
					put(grammarAccess.getDSLManagedAccess().getGroup(), "rule__DSLManaged__Group__0");
					put(grammarAccess.getDSLManagedAccess().getGroup_2(), "rule__DSLManaged__Group_2__0");
					put(grammarAccess.getDSLManagedAccess().getGroup_2_2(), "rule__DSLManaged__Group_2_2__0");
					put(grammarAccess.getDSLControlLoopManagerAccess().getGroup(), "rule__DSLControlLoopManager__Group__0");
					put(grammarAccess.getDSLControlLoopManagerAccess().getGroup_4(), "rule__DSLControlLoopManager__Group_4__0");
					put(grammarAccess.getDSLControlLoopManagerAccess().getGroup_4_2(), "rule__DSLControlLoopManager__Group_4_2__0");
					put(grammarAccess.getDSLControlLoopAccess().getGroup(), "rule__DSLControlLoop__Group__0");
					put(grammarAccess.getDSLControlLoopAccess().getGroup_2(), "rule__DSLControlLoop__Group_2__0");
					put(grammarAccess.getDSLControlLoopAccess().getGroup_2_2(), "rule__DSLControlLoop__Group_2_2__0");
					put(grammarAccess.getDSLMonitorAccess().getGroup(), "rule__DSLMonitor__Group__0");
					put(grammarAccess.getDSLMonitorAccess().getGroup_2(), "rule__DSLMonitor__Group_2__0");
					put(grammarAccess.getDSLMonitorAccess().getGroup_2_2(), "rule__DSLMonitor__Group_2_2__0");
					put(grammarAccess.getDSLAnalyzerAccess().getGroup(), "rule__DSLAnalyzer__Group__0");
					put(grammarAccess.getDSLAnalyzerAccess().getGroup_2(), "rule__DSLAnalyzer__Group_2__0");
					put(grammarAccess.getDSLAnalyzerAccess().getGroup_2_2(), "rule__DSLAnalyzer__Group_2_2__0");
					put(grammarAccess.getDSLPlannerAccess().getGroup(), "rule__DSLPlanner__Group__0");
					put(grammarAccess.getDSLPlannerAccess().getGroup_2(), "rule__DSLPlanner__Group_2__0");
					put(grammarAccess.getDSLPlannerAccess().getGroup_2_2(), "rule__DSLPlanner__Group_2_2__0");
					put(grammarAccess.getDSLExecutorAccess().getGroup(), "rule__DSLExecutor__Group__0");
					put(grammarAccess.getDSLExecutorAccess().getGroup_2(), "rule__DSLExecutor__Group_2__0");
					put(grammarAccess.getDSLExecutorAccess().getGroup_2_2(), "rule__DSLExecutor__Group_2_2__0");
					put(grammarAccess.getDSLKnowledgeAccess().getGroup(), "rule__DSLKnowledge__Group__0");
					put(grammarAccess.getDSLKnowledgeAccess().getGroup_2(), "rule__DSLKnowledge__Group_2__0");
					put(grammarAccess.getDSLKnowledgeAccess().getGroup_2_2(), "rule__DSLKnowledge__Group_2_2__0");
					put(grammarAccess.getDSLSensorAccess().getGroup(), "rule__DSLSensor__Group__0");
					put(grammarAccess.getDSLSensorAccess().getGroup_2(), "rule__DSLSensor__Group_2__0");
					put(grammarAccess.getDSLSensorAccess().getGroup_2_2(), "rule__DSLSensor__Group_2_2__0");
					put(grammarAccess.getDSLEffectorAccess().getGroup(), "rule__DSLEffector__Group__0");
					put(grammarAccess.getDSLEffectorAccess().getGroup_2(), "rule__DSLEffector__Group_2__0");
					put(grammarAccess.getDSLEffectorAccess().getGroup_2_2(), "rule__DSLEffector__Group_2_2__0");
					put(grammarAccess.getDSLProbeAccess().getGroup(), "rule__DSLProbe__Group__0");
					put(grammarAccess.getDSLProbeAccess().getGroup_2(), "rule__DSLProbe__Group_2__0");
					put(grammarAccess.getDSLProbeAccess().getGroup_2_2(), "rule__DSLProbe__Group_2_2__0");
					put(grammarAccess.getDSLGaugeAccess().getGroup(), "rule__DSLGauge__Group__0");
					put(grammarAccess.getDSLGaugeAccess().getGroup_2(), "rule__DSLGauge__Group_2__0");
					put(grammarAccess.getDSLGaugeAccess().getGroup_2_2(), "rule__DSLGauge__Group_2_2__0");
					put(grammarAccess.getDSLReferenceInputAccess().getGroup(), "rule__DSLReferenceInput__Group__0");
					put(grammarAccess.getDSLReferenceInputAccess().getGroup_2(), "rule__DSLReferenceInput__Group_2__0");
					put(grammarAccess.getDSLReferenceInputAccess().getGroup_2_2(), "rule__DSLReferenceInput__Group_2_2__0");
					put(grammarAccess.getDSLMeasuredOutputAccess().getGroup(), "rule__DSLMeasuredOutput__Group__0");
					put(grammarAccess.getDSLMeasuredOutputAccess().getGroup_2(), "rule__DSLMeasuredOutput__Group_2__0");
					put(grammarAccess.getDSLMeasuredOutputAccess().getGroup_2_2(), "rule__DSLMeasuredOutput__Group_2_2__0");
					put(grammarAccess.getArchitectureDefinitionAccess().getAbstractionsAssignment_2(), "rule__ArchitectureDefinition__AbstractionsAssignment_2");
					put(grammarAccess.getArchitectureDefinitionAccess().getCompositionsAssignment_6(), "rule__ArchitectureDefinition__CompositionsAssignment_6");
					put(grammarAccess.getArchitectureDefinitionAccess().getRestrictionsAssignment_10(), "rule__ArchitectureDefinition__RestrictionsAssignment_10");
					put(grammarAccess.getDSLRestrictionAccess().getOnlyAssignment_0_0(), "rule__DSLRestriction__OnlyAssignment_0_0");
					put(grammarAccess.getDSLRestrictionAccess().getTAssignment_0_1(), "rule__DSLRestriction__TAssignment_0_1");
					put(grammarAccess.getDSLRestrictionAccess().getCanAssignment_0_2(), "rule__DSLRestriction__CanAssignment_0_2");
					put(grammarAccess.getDSLRestrictionAccess().getElementTypeAssignment_0_3(), "rule__DSLRestriction__ElementTypeAssignment_0_3");
					put(grammarAccess.getDSLRestrictionAccess().getTypeAssignment_0_4(), "rule__DSLRestriction__TypeAssignment_0_4");
					put(grammarAccess.getDSLRestrictionAccess().getTAssignment_1_0(), "rule__DSLRestriction__TAssignment_1_0");
					put(grammarAccess.getDSLRestrictionAccess().getCannotAssignment_1_1(), "rule__DSLRestriction__CannotAssignment_1_1");
					put(grammarAccess.getDSLRestrictionAccess().getElementTypeAssignment_1_2(), "rule__DSLRestriction__ElementTypeAssignment_1_2");
					put(grammarAccess.getDSLRestrictionAccess().getTypeAssignment_1_3(), "rule__DSLRestriction__TypeAssignment_1_3");
					put(grammarAccess.getDSLRestrictionAccess().getTAssignment_2_0(), "rule__DSLRestriction__TAssignment_2_0");
					put(grammarAccess.getDSLRestrictionAccess().getCanAssignment_2_1(), "rule__DSLRestriction__CanAssignment_2_1");
					put(grammarAccess.getDSLRestrictionAccess().getElementTypeAssignment_2_2(), "rule__DSLRestriction__ElementTypeAssignment_2_2");
					put(grammarAccess.getDSLRestrictionAccess().getTypeAssignment_2_3(), "rule__DSLRestriction__TypeAssignment_2_3");
					put(grammarAccess.getDSLRestrictionAccess().getTAssignment_3_0(), "rule__DSLRestriction__TAssignment_3_0");
					put(grammarAccess.getDSLRestrictionAccess().getCanAssignment_3_1(), "rule__DSLRestriction__CanAssignment_3_1");
					put(grammarAccess.getDSLRestrictionAccess().getElementTypeAssignment_3_2(), "rule__DSLRestriction__ElementTypeAssignment_3_2");
					put(grammarAccess.getDSLRestrictionAccess().getOnly2Assignment_3_3(), "rule__DSLRestriction__Only2Assignment_3_3");
					put(grammarAccess.getDSLRestrictionAccess().getTypeAssignment_3_4(), "rule__DSLRestriction__TypeAssignment_3_4");
					put(grammarAccess.getDSLRestrictionAccess().getTAssignment_4_0(), "rule__DSLRestriction__TAssignment_4_0");
					put(grammarAccess.getDSLRestrictionAccess().getMustAssignment_4_1(), "rule__DSLRestriction__MustAssignment_4_1");
					put(grammarAccess.getDSLRestrictionAccess().getEntityTypeAssignment_4_2(), "rule__DSLRestriction__EntityTypeAssignment_4_2");
					put(grammarAccess.getDSLRestrictionAccess().getTypeAssignment_4_3(), "rule__DSLRestriction__TypeAssignment_4_3");
					put(grammarAccess.getDSLSensorBelongsToAccess().getSensorAssignment_1(), "rule__DSLSensorBelongsTo__SensorAssignment_1");
					put(grammarAccess.getDSLSensorBelongsToAccess().getMonitorAssignment_3(), "rule__DSLSensorBelongsTo__MonitorAssignment_3");
					put(grammarAccess.getDSLReferenceInputBelongsToAccess().getReferenceAssignment_1(), "rule__DSLReferenceInputBelongsTo__ReferenceAssignment_1");
					put(grammarAccess.getDSLReferenceInputBelongsToAccess().getKnowledgeAssignment_3(), "rule__DSLReferenceInputBelongsTo__KnowledgeAssignment_3");
					put(grammarAccess.getDSLEffectorBelongsToAccess().getEffectorAssignment_1(), "rule__DSLEffectorBelongsTo__EffectorAssignment_1");
					put(grammarAccess.getDSLEffectorBelongsToAccess().getExecutorAssignment_3(), "rule__DSLEffectorBelongsTo__ExecutorAssignment_3");
					put(grammarAccess.getDSLMonitorBelongsTo1Access().getMonitorAssignment_1(), "rule__DSLMonitorBelongsTo1__MonitorAssignment_1");
					put(grammarAccess.getDSLMonitorBelongsTo1Access().getClAssignment_3(), "rule__DSLMonitorBelongsTo1__ClAssignment_3");
					put(grammarAccess.getDSLMonitorBelongsTo2Access().getMonitorAssignment_1(), "rule__DSLMonitorBelongsTo2__MonitorAssignment_1");
					put(grammarAccess.getDSLMonitorBelongsTo2Access().getManagingAssignment_3(), "rule__DSLMonitorBelongsTo2__ManagingAssignment_3");
					put(grammarAccess.getDSLAnalyzerBelongsTo1Access().getAnalyzerAssignment_1(), "rule__DSLAnalyzerBelongsTo1__AnalyzerAssignment_1");
					put(grammarAccess.getDSLAnalyzerBelongsTo1Access().getClAssignment_3(), "rule__DSLAnalyzerBelongsTo1__ClAssignment_3");
					put(grammarAccess.getDSLAnalyzerBelongsTo2Access().getAnalyzerAssignment_1(), "rule__DSLAnalyzerBelongsTo2__AnalyzerAssignment_1");
					put(grammarAccess.getDSLAnalyzerBelongsTo2Access().getManagingAssignment_3(), "rule__DSLAnalyzerBelongsTo2__ManagingAssignment_3");
					put(grammarAccess.getDSLPlannerBelongsTo1Access().getPlannerAssignment_1(), "rule__DSLPlannerBelongsTo1__PlannerAssignment_1");
					put(grammarAccess.getDSLPlannerBelongsTo1Access().getClAssignment_3(), "rule__DSLPlannerBelongsTo1__ClAssignment_3");
					put(grammarAccess.getDSLPlannerBelongsTo2Access().getPlannerAssignment_1(), "rule__DSLPlannerBelongsTo2__PlannerAssignment_1");
					put(grammarAccess.getDSLPlannerBelongsTo2Access().getManagingAssignment_3(), "rule__DSLPlannerBelongsTo2__ManagingAssignment_3");
					put(grammarAccess.getDSLExecutorBelongsTo1Access().getExecutorAssignment_1(), "rule__DSLExecutorBelongsTo1__ExecutorAssignment_1");
					put(grammarAccess.getDSLExecutorBelongsTo1Access().getClAssignment_3(), "rule__DSLExecutorBelongsTo1__ClAssignment_3");
					put(grammarAccess.getDSLExecutorBelongsTo2Access().getExecutorAssignment_1(), "rule__DSLExecutorBelongsTo2__ExecutorAssignment_1");
					put(grammarAccess.getDSLExecutorBelongsTo2Access().getManagingAssignment_3(), "rule__DSLExecutorBelongsTo2__ManagingAssignment_3");
					put(grammarAccess.getDSLClBelongsTo1Access().getClAssignment_1(), "rule__DSLClBelongsTo1__ClAssignment_1");
					put(grammarAccess.getDSLClBelongsTo1Access().getClmAssignment_3(), "rule__DSLClBelongsTo1__ClmAssignment_3");
					put(grammarAccess.getDSLClBelongsTo2Access().getClAssignment_1(), "rule__DSLClBelongsTo2__ClAssignment_1");
					put(grammarAccess.getDSLClBelongsTo2Access().getManagingAssignment_3(), "rule__DSLClBelongsTo2__ManagingAssignment_3");
					put(grammarAccess.getDSLClmBelongsToAccess().getClAssignment_1(), "rule__DSLClmBelongsTo__ClAssignment_1");
					put(grammarAccess.getDSLClmBelongsToAccess().getManagingAssignment_3(), "rule__DSLClmBelongsTo__ManagingAssignment_3");
					put(grammarAccess.getDSLMeasuredOuputBelongsToAccess().getMeasuredAssignment_1(), "rule__DSLMeasuredOuputBelongsTo__MeasuredAssignment_1");
					put(grammarAccess.getDSLMeasuredOuputBelongsToAccess().getManagedAssignment_3(), "rule__DSLMeasuredOuputBelongsTo__ManagedAssignment_3");
					put(grammarAccess.getDSLGaugeBelongsToAccess().getGaugeAssignment_1(), "rule__DSLGaugeBelongsTo__GaugeAssignment_1");
					put(grammarAccess.getDSLGaugeBelongsToAccess().getManagedAssignment_3(), "rule__DSLGaugeBelongsTo__ManagedAssignment_3");
					put(grammarAccess.getDSLProbeBelongsToAccess().getProbeAssignment_1(), "rule__DSLProbeBelongsTo__ProbeAssignment_1");
					put(grammarAccess.getDSLProbeBelongsToAccess().getManagedAssignment_3(), "rule__DSLProbeBelongsTo__ManagedAssignment_3");
					put(grammarAccess.getDSLManagingAccess().getNameAssignment_1(), "rule__DSLManaging__NameAssignment_1");
					put(grammarAccess.getDSLManagingAccess().getInterfaceAssignment_2_1(), "rule__DSLManaging__InterfaceAssignment_2_1");
					put(grammarAccess.getDSLManagingAccess().getInterfaceAssignment_2_2_1(), "rule__DSLManaging__InterfaceAssignment_2_2_1");
					put(grammarAccess.getDSLManagedAccess().getNameAssignment_1(), "rule__DSLManaged__NameAssignment_1");
					put(grammarAccess.getDSLManagedAccess().getInterfaceAssignment_2_1(), "rule__DSLManaged__InterfaceAssignment_2_1");
					put(grammarAccess.getDSLManagedAccess().getInterfaceAssignment_2_2_1(), "rule__DSLManaged__InterfaceAssignment_2_2_1");
					put(grammarAccess.getDSLControlLoopManagerAccess().getNameAssignment_1(), "rule__DSLControlLoopManager__NameAssignment_1");
					put(grammarAccess.getDSLControlLoopManagerAccess().getInterfaceAssignment_4_1(), "rule__DSLControlLoopManager__InterfaceAssignment_4_1");
					put(grammarAccess.getDSLControlLoopManagerAccess().getInterfaceAssignment_4_2_1(), "rule__DSLControlLoopManager__InterfaceAssignment_4_2_1");
					put(grammarAccess.getDSLControlLoopAccess().getNameAssignment_1(), "rule__DSLControlLoop__NameAssignment_1");
					put(grammarAccess.getDSLControlLoopAccess().getInterfaceAssignment_2_1(), "rule__DSLControlLoop__InterfaceAssignment_2_1");
					put(grammarAccess.getDSLControlLoopAccess().getInterfaceAssignment_2_2_1(), "rule__DSLControlLoop__InterfaceAssignment_2_2_1");
					put(grammarAccess.getDSLMonitorAccess().getNameAssignment_1(), "rule__DSLMonitor__NameAssignment_1");
					put(grammarAccess.getDSLMonitorAccess().getInterfaceAssignment_2_1(), "rule__DSLMonitor__InterfaceAssignment_2_1");
					put(grammarAccess.getDSLMonitorAccess().getInterfaceAssignment_2_2_1(), "rule__DSLMonitor__InterfaceAssignment_2_2_1");
					put(grammarAccess.getDSLAnalyzerAccess().getNameAssignment_1(), "rule__DSLAnalyzer__NameAssignment_1");
					put(grammarAccess.getDSLAnalyzerAccess().getInterfaceAssignment_2_1(), "rule__DSLAnalyzer__InterfaceAssignment_2_1");
					put(grammarAccess.getDSLAnalyzerAccess().getInterfaceAssignment_2_2_1(), "rule__DSLAnalyzer__InterfaceAssignment_2_2_1");
					put(grammarAccess.getDSLPlannerAccess().getNameAssignment_1(), "rule__DSLPlanner__NameAssignment_1");
					put(grammarAccess.getDSLPlannerAccess().getInterfaceAssignment_2_1(), "rule__DSLPlanner__InterfaceAssignment_2_1");
					put(grammarAccess.getDSLPlannerAccess().getInterfaceAssignment_2_2_1(), "rule__DSLPlanner__InterfaceAssignment_2_2_1");
					put(grammarAccess.getDSLExecutorAccess().getNameAssignment_1(), "rule__DSLExecutor__NameAssignment_1");
					put(grammarAccess.getDSLExecutorAccess().getInterfaceAssignment_2_1(), "rule__DSLExecutor__InterfaceAssignment_2_1");
					put(grammarAccess.getDSLExecutorAccess().getInterfaceAssignment_2_2_1(), "rule__DSLExecutor__InterfaceAssignment_2_2_1");
					put(grammarAccess.getDSLKnowledgeAccess().getNameAssignment_1(), "rule__DSLKnowledge__NameAssignment_1");
					put(grammarAccess.getDSLKnowledgeAccess().getInterfaceAssignment_2_1(), "rule__DSLKnowledge__InterfaceAssignment_2_1");
					put(grammarAccess.getDSLKnowledgeAccess().getInterfaceAssignment_2_2_1(), "rule__DSLKnowledge__InterfaceAssignment_2_2_1");
					put(grammarAccess.getDSLSensorAccess().getNameAssignment_1(), "rule__DSLSensor__NameAssignment_1");
					put(grammarAccess.getDSLSensorAccess().getInterfaceAssignment_2_1(), "rule__DSLSensor__InterfaceAssignment_2_1");
					put(grammarAccess.getDSLSensorAccess().getInterfaceAssignment_2_2_1(), "rule__DSLSensor__InterfaceAssignment_2_2_1");
					put(grammarAccess.getDSLEffectorAccess().getNameAssignment_1(), "rule__DSLEffector__NameAssignment_1");
					put(grammarAccess.getDSLEffectorAccess().getInterfaceAssignment_2_1(), "rule__DSLEffector__InterfaceAssignment_2_1");
					put(grammarAccess.getDSLEffectorAccess().getInterfaceAssignment_2_2_1(), "rule__DSLEffector__InterfaceAssignment_2_2_1");
					put(grammarAccess.getDSLProbeAccess().getNameAssignment_1(), "rule__DSLProbe__NameAssignment_1");
					put(grammarAccess.getDSLProbeAccess().getInterfaceAssignment_2_1(), "rule__DSLProbe__InterfaceAssignment_2_1");
					put(grammarAccess.getDSLProbeAccess().getInterfaceAssignment_2_2_1(), "rule__DSLProbe__InterfaceAssignment_2_2_1");
					put(grammarAccess.getDSLGaugeAccess().getNameAssignment_1(), "rule__DSLGauge__NameAssignment_1");
					put(grammarAccess.getDSLGaugeAccess().getInterfaceAssignment_2_1(), "rule__DSLGauge__InterfaceAssignment_2_1");
					put(grammarAccess.getDSLGaugeAccess().getInterfaceAssignment_2_2_1(), "rule__DSLGauge__InterfaceAssignment_2_2_1");
					put(grammarAccess.getDSLReferenceInputAccess().getNameAssignment_1(), "rule__DSLReferenceInput__NameAssignment_1");
					put(grammarAccess.getDSLReferenceInputAccess().getInterfaceAssignment_2_1(), "rule__DSLReferenceInput__InterfaceAssignment_2_1");
					put(grammarAccess.getDSLReferenceInputAccess().getInterfaceAssignment_2_2_1(), "rule__DSLReferenceInput__InterfaceAssignment_2_2_1");
					put(grammarAccess.getDSLMeasuredOutputAccess().getNameAssignment_1(), "rule__DSLMeasuredOutput__NameAssignment_1");
					put(grammarAccess.getDSLMeasuredOutputAccess().getInterfaceAssignment_2_1(), "rule__DSLMeasuredOutput__InterfaceAssignment_2_1");
					put(grammarAccess.getDSLMeasuredOutputAccess().getInterfaceAssignment_2_2_1(), "rule__DSLMeasuredOutput__InterfaceAssignment_2_2_1");
					put(grammarAccess.getOnlyAccess().getOnlyAssignment(), "rule__Only__OnlyAssignment");
					put(grammarAccess.getCanAccess().getCanAssignment(), "rule__Can__CanAssignment");
					put(grammarAccess.getCannotAccess().getCannotAssignment(), "rule__Cannot__CannotAssignment");
					put(grammarAccess.getOnly2Access().getOnly2Assignment(), "rule__Only2__Only2Assignment");
					put(grammarAccess.getMustAccess().getMustAssignment(), "rule__Must__MustAssignment");
					put(grammarAccess.getBasicTypeAccess().getTypeNameAssignment(), "rule__BasicType__TypeNameAssignment");
					put(grammarAccess.getEntityTypeAccess().getEntityAssignment(), "rule__EntityType__EntityAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalSasDslParser typedParser = (InternalSasDslParser) parser;
			typedParser.entryRuleArchitectureDefinition();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public SasDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(SasDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
