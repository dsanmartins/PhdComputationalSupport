/*
 * generated by Xtext 2.16.0
 */
package br.ufscar.sas.xtext.sasdsl.formatting2

import br.ufscar.sas.xtext.sasdsl.sasDsl.ArchitectureDefinition
import br.ufscar.sas.xtext.sasdsl.services.SasDslGrammarAccess
import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class SasDslFormatter extends AbstractFormatter2 {
	
	@Inject extension SasDslGrammarAccess

	def dispatch void format(ArchitectureDefinition architectureDefinition, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (dSLAbstractions : architectureDefinition.abstractions) {
			dSLAbstractions.format
			
			val open = dSLAbstractions.regionFor.keyword(":")
			val close = dSLAbstractions.regionFor.keyword("restriction")
			interior(open, close)[indent]
			
			
		}
	}
	
	// TODO: implement for 
}
