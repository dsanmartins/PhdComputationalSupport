grammar br.ufscar.sas.xtext.sasdsl.SasDsl with org.eclipse.xtext.common.Terminals

generate sasDsl "http://www.ufscar.br/sas/xtext/sasdsl/SasDsl"

ArchitectureDefinition:
	'Abstractions' '{' abstractions += DSLAbstraction+ '}'  
	'Compositions' '{' compositions += DSLComposition* '}'  
	'Restrictions' '{' restrictions += DSLRestriction* '}'  
;
	
DSLAbstraction:
	
	DSLManaging | DSLManaged | DSLControlLoopManager | DSLControlLoop | 
	DSLMonitor | DSLAnalyzer | DSLPlanner | DSLExecutor | DSLKnowledge | DSLSensor | 
	DSLEffector | DSLReferenceInput | DSLMeasuredOutput 
;	

DSLComposition:
	
	DSLSensorBelongsTo | DSLReferenceInputBelongsTo | DSLEffectorBelongsTo | DSLMonitorBelongsTo1 | DSLMonitorBelongsTo2 | DSLAnalyzerBelongsTo1 |
	DSLAnalyzerBelongsTo2 | DSLPlannerBelongsTo1 | DSLPlannerBelongsTo2 | DSLExecutorBelongsTo1 | DSLExecutorBelongsTo2 | DSLClBelongsTo1 |
	DSLClBelongsTo2 | DSLClmBelongsTo | DSLMeasuredOuputBelongsTo | DSLKnowledgeBelongsTo
;

DSLRestriction:
	
	DSLRestrictionMonitor | DSLRestrictionPlanner | DSLRestrictionExecutor | DSLRestrictionKnowledge | DSLRestrictionManaged | DSLRestrictionSensor | DSLRestrictionEffector

;

DSLRestrictionEffector:
	
	('executor' t=[DSLExecutor] 'must-not-access-effector' effector = [DSLEffector] ';') |
	('executor' t=[DSLExecutor] 'must-access-effector' effector = [DSLEffector] 'through-interface' effectorinterface=[EffectorInterface] ';') 
;

DSLRestrictionSensor:
	
	('monitor' t=[DSLMonitor] 'must-not-access-sensor' sensor = [DSLSensor] ';') |
	('monitor' t=[DSLMonitor] 'must-access-sensor' sensor = [DSLSensor] 'through-interface' sensorinterface=[SensorInterface] ';') 
;

DSLRestrictionMonitor:
	
	('analyzer' t=[DSLAnalyzer] 'must-not-access-monitor' monitor = [DSLMonitor] ';') |
	('analyzer' t=[DSLAnalyzer] 'must-access-monitor' monitor = [DSLMonitor] 'through-interface' monitorinterface=[MonitorInterface] ';') 
;

DSLRestrictionPlanner:
	
	('analyzer' t=[DSLAnalyzer] 'must-not-access-planner' planner = [DSLPlanner] ';') |
	('analyzer' t=[DSLAnalyzer] 'must-access-planner' planner = [DSLPlanner] 'through-interface' plannerinterface=[PlannerInterface] ';') 
;

DSLRestrictionExecutor:
		
	('analyzer' t=[DSLAnalyzer] 'must-not-access-executor' executor = [DSLExecutor] ';') |
	('analyzer' t=[DSLAnalyzer] 'must-access-executor' executor = [DSLExecutor] 'through-interface' executorinterface=[ExecutorInterface] ';') 
;

DSLRestrictionKnowledge:
	
	('analyzer' t=[DSLAnalyzer] 'must-not-access-knowledge' knowledge = [DSLKnowledge] ';') |
	('analyzer' t=[DSLAnalyzer] 'must-access-knowledge' knowledge = [DSLKnowledge] 'through-interface' knowledgeinterface=[KnowledgeInterface] ';') |
	
	('planner' t=[DSLPlanner] 'must-not-access-knowledge' knowledge = [DSLKnowledge] ';') |
	('planner' t=[DSLPlanner] 'must-access-knowledge' knowledge = [DSLKnowledge] 'through-interface' knowledgeinterface=[KnowledgeInterface] ';') 
;

DSLRestrictionManaged:
		
	('managing' t=[DSLManaging] 'must-not-access-managed' managed = [DSLManaged] ';') |
	('managing' t=[DSLManaging] 'must-access-managed' managed = [DSLManaged] 'through-interface' managedinterface=[ManagedInterface] ';') 
;

DSLSensorBelongsTo:
	
	'sensor' sensor=[DSLSensor] 'must-be-in-managed' managed=[DSLManaged] ';'
;

DSLReferenceInputBelongsTo:

	'reference-input' reference=[DSLReferenceInput] 'must-be-in-knowledge' knowledge=[DSLKnowledge] ';'
;


DSLEffectorBelongsTo:
	
	'effector' effector=[DSLEffector] 'must-be-in-managed' managed=[DSLManaged] ';'
	
;

DSLMonitorBelongsTo1:
	
	'monitor' monitor=[DSLMonitor] 'must-be-in-control-loop' cl=[DSLControlLoop] ';'
	
;

DSLMonitorBelongsTo2:
	
	'monitor' monitor=[DSLMonitor] 'must-be-in-managing' managing=[DSLManaging] ';'
	
;

DSLAnalyzerBelongsTo1:
	
	'analyzer' analyzer=[DSLAnalyzer] 'must-be-in-control-loop' cl=[DSLControlLoop] ';'
	
;

DSLAnalyzerBelongsTo2:
	
	'analyzer' analyzer=[DSLAnalyzer] 'must-be-in-managing' managing=[DSLManaging] ';'
	
;

DSLPlannerBelongsTo1:
	
	'planner' planner=[DSLPlanner] 'must-be-in-control-loop' cl=[DSLControlLoop] ';'
	
;

DSLPlannerBelongsTo2:
	
	'planner' planner=[DSLPlanner] 'must-be-in-managing' managing=[DSLManaging] ';'
	
;

DSLExecutorBelongsTo1:
	
	'executor' executor=[DSLExecutor] 'must-be-in-control-loop' cl=[DSLControlLoop] ';'
	
;

DSLExecutorBelongsTo2:
	
	'executor' executor=[DSLExecutor] 'must-be-in-managing' managing=[DSLManaging] ';'
	
;

DSLClBelongsTo1:
	
	'control-loop' cl=[DSLControlLoop] 'must-be-in-control-loop-manager' clm=[DSLControlLoopManager] ';'
	
;

DSLClBelongsTo2:
	
	'control-loop' cl=[DSLControlLoop] 'must-be-in-managing' managing=[DSLManaging] ';'
	
;

DSLClmBelongsTo:
	
	'control-loop-manager' cl=[DSLControlLoopManager] 'must-be-in-managing' managing=[DSLManaging] ';'
	
;

DSLMeasuredOuputBelongsTo:
	
	'measured-output' measured=[DSLMeasuredOutput] 'must-be-in-managed' managed=[DSLManaged] ';'
;

DSLKnowledgeBelongsTo:
	
	'knowledge' knowledge=[DSLKnowledge] 'must-be-in-managing' managing=[DSLManaging] ';'
;

DSLManaging:
	
	'Managing' name=ID ';'
;

DSLManaged:
	
	'Managed' name=ID   ('with-interface' managedinterfaces+=ManagedInterface (',' managedinterfaces+=ManagedInterface)* )? ';'
;

DSLControlLoopManager:
	
	'ControlLoopManager' name=ID  'typeOf' DSLTypeCLM ('with-interface' clminterfaces+=ControlLoopManagerInterface (',' clminterfaces+=ControlLoopManagerInterface)* )? ';'
;

DSLTypeCLM:
	
	'Synchronized'| 'Coordinated' | 'Independent'
	
;

DSLControlLoop:
	
	'ControlLoop' name=ID  ('with-interface' clinterfaces+=ControlLoopInterface (',' clinterfaces+=ControlLoopInterface)* )? ';'
;


DSLMonitor:
	
	'Monitor'  name=ID  ('with-interface' monitorinterfaces+=MonitorInterface (',' monitorinterfaces+=MonitorInterface)* )? ';'
;

DSLAnalyzer:
	
	'Analyzer' name=ID  ('with-interface' anlyzerinterfaces+=AnalyzerInterface (',' anlyzerinterfaces+=AnalyzerInterface)* )? ';'
;

DSLPlanner: 
	
	'Planner' name=ID ('with-interface' plannerinterfaces+=PlannerInterface (',' plannerinterfaces+=PlannerInterface)* )? ';'
;

DSLExecutor: 
	
	'Executor' name=ID ('with-interface' executorinterfaces+=ExecutorInterface (',' executorinterfaces+=ExecutorInterface)* )? ';'
;

DSLKnowledge: 
	
	'Knowledge' name=ID ('with-interface' knowledgeinterfaces+=KnowledgeInterface (',' knowledgeinterfaces+=KnowledgeInterface)* )? ';'
;

DSLSensor: 
	
	'Sensor' name=ID  ('with-interface' sensorinterfaces+=SensorInterface (',' sensorinterfaces+=SensorInterface)* )? ';'
;

DSLEffector: 
	
	'Effector' name=ID ('with-interface' effectorinterfaces+=EffectorInterface (',' effectorinterfaces+=EffectorInterface)* )? ';'
;
  
DSLReferenceInput:
	
	'ReferenceInput'  name=ID ';'
;

DSLMeasuredOutput:
	
	'MeasuredOutput' name=ID ';'
;

EffectorInterface :
	
	name=ID
;


SensorInterface :
	
	name=ID
;

MonitorInterface :
	
	name=ID
;

AnalyzerInterface :
	
	name=ID
;

PlannerInterface :
	
	name=ID
;


ExecutorInterface :
	
	name=ID
;


KnowledgeInterface :
	
	name=ID
;

ControlLoopInterface :
	
	name=ID
;

ControlLoopManagerInterface :
	
	name=ID
;


ManagedInterface:
	
	name=ID
;

