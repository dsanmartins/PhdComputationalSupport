/**
 * generated by Xtext 2.10.0
 */
package br.ufscar.sas.xtext.sasdsl.sasDsl.impl;

import br.ufscar.sas.xtext.sasdsl.sasDsl.AnalyzerInterface;
import br.ufscar.sas.xtext.sasdsl.sasDsl.ArchitectureDefinition;
import br.ufscar.sas.xtext.sasdsl.sasDsl.ControlLoopInterface;
import br.ufscar.sas.xtext.sasdsl.sasDsl.ControlLoopManagerInterface;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLAbstraction;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLAnalyzer;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLAnalyzerBelongsTo1;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLAnalyzerBelongsTo2;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLClBelongsTo1;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLClBelongsTo2;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLClmBelongsTo;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLComposition;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLControlLoop;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLControlLoopManager;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLEffector;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLEffectorBelongsTo;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLExecutor;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLExecutorBelongsTo1;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLExecutorBelongsTo2;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLKnowledge;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLKnowledgeBelongsTo;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLManaged;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLManaging;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLMeasuredOuputBelongsTo;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLMeasuredOutput;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLMonitor;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLMonitorBelongsTo1;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLMonitorBelongsTo2;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLPlanner;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLPlannerBelongsTo1;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLPlannerBelongsTo2;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLReferenceInput;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLReferenceInputBelongsTo;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLRestriction;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLRestrictionEffector;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLRestrictionExecutor;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLRestrictionKnowledge;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLRestrictionManaged;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLRestrictionMonitor;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLRestrictionPlanner;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLRestrictionSensor;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLSensor;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLSensorBelongsTo;
import br.ufscar.sas.xtext.sasdsl.sasDsl.EffectorInterface;
import br.ufscar.sas.xtext.sasdsl.sasDsl.ExecutorInterface;
import br.ufscar.sas.xtext.sasdsl.sasDsl.KnowledgeInterface;
import br.ufscar.sas.xtext.sasdsl.sasDsl.ManagedInterface;
import br.ufscar.sas.xtext.sasdsl.sasDsl.MonitorInterface;
import br.ufscar.sas.xtext.sasdsl.sasDsl.PlannerInterface;
import br.ufscar.sas.xtext.sasdsl.sasDsl.SasDslFactory;
import br.ufscar.sas.xtext.sasdsl.sasDsl.SasDslPackage;
import br.ufscar.sas.xtext.sasdsl.sasDsl.SensorInterface;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class SasDslPackageImpl extends EPackageImpl implements SasDslPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass architectureDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslAbstractionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslCompositionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslRestrictionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslRestrictionEffectorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslRestrictionSensorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslRestrictionMonitorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslRestrictionPlannerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslRestrictionExecutorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslRestrictionKnowledgeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslRestrictionManagedEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslSensorBelongsToEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslReferenceInputBelongsToEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslEffectorBelongsToEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslMonitorBelongsTo1EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslMonitorBelongsTo2EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslAnalyzerBelongsTo1EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslAnalyzerBelongsTo2EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslPlannerBelongsTo1EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslPlannerBelongsTo2EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslExecutorBelongsTo1EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslExecutorBelongsTo2EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslClBelongsTo1EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslClBelongsTo2EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslClmBelongsToEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslMeasuredOuputBelongsToEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslKnowledgeBelongsToEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslManagingEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslManagedEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslControlLoopManagerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslControlLoopEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslMonitorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslAnalyzerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslPlannerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslExecutorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslKnowledgeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslSensorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslEffectorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslReferenceInputEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dslMeasuredOutputEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass effectorInterfaceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sensorInterfaceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass monitorInterfaceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass analyzerInterfaceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass plannerInterfaceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass executorInterfaceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass knowledgeInterfaceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass controlLoopInterfaceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass controlLoopManagerInterfaceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass managedInterfaceEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see br.ufscar.sas.xtext.sasdsl.sasDsl.SasDslPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private SasDslPackageImpl()
  {
    super(eNS_URI, SasDslFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link SasDslPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static SasDslPackage init()
  {
    if (isInited) return (SasDslPackage)EPackage.Registry.INSTANCE.getEPackage(SasDslPackage.eNS_URI);

    // Obtain or create and register package
    SasDslPackageImpl theSasDslPackage = (SasDslPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof SasDslPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new SasDslPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theSasDslPackage.createPackageContents();

    // Initialize created meta-data
    theSasDslPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theSasDslPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(SasDslPackage.eNS_URI, theSasDslPackage);
    return theSasDslPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getArchitectureDefinition()
  {
    return architectureDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getArchitectureDefinition_Abstractions()
  {
    return (EReference)architectureDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getArchitectureDefinition_Compositions()
  {
    return (EReference)architectureDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getArchitectureDefinition_Restrictions()
  {
    return (EReference)architectureDefinitionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLAbstraction()
  {
    return dslAbstractionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDSLAbstraction_Name()
  {
    return (EAttribute)dslAbstractionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLComposition()
  {
    return dslCompositionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLRestriction()
  {
    return dslRestrictionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLRestrictionEffector()
  {
    return dslRestrictionEffectorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLRestrictionEffector_T()
  {
    return (EReference)dslRestrictionEffectorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLRestrictionEffector_Effector()
  {
    return (EReference)dslRestrictionEffectorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLRestrictionEffector_Effectorinterface()
  {
    return (EReference)dslRestrictionEffectorEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLRestrictionSensor()
  {
    return dslRestrictionSensorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLRestrictionSensor_T()
  {
    return (EReference)dslRestrictionSensorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLRestrictionSensor_Sensor()
  {
    return (EReference)dslRestrictionSensorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLRestrictionSensor_Sensorinterface()
  {
    return (EReference)dslRestrictionSensorEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLRestrictionMonitor()
  {
    return dslRestrictionMonitorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLRestrictionMonitor_T()
  {
    return (EReference)dslRestrictionMonitorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLRestrictionMonitor_Monitor()
  {
    return (EReference)dslRestrictionMonitorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLRestrictionMonitor_Monitorinterface()
  {
    return (EReference)dslRestrictionMonitorEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLRestrictionPlanner()
  {
    return dslRestrictionPlannerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLRestrictionPlanner_T()
  {
    return (EReference)dslRestrictionPlannerEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLRestrictionPlanner_Planner()
  {
    return (EReference)dslRestrictionPlannerEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLRestrictionPlanner_Plannerinterface()
  {
    return (EReference)dslRestrictionPlannerEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLRestrictionExecutor()
  {
    return dslRestrictionExecutorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLRestrictionExecutor_T()
  {
    return (EReference)dslRestrictionExecutorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLRestrictionExecutor_Executor()
  {
    return (EReference)dslRestrictionExecutorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLRestrictionExecutor_Executorinterface()
  {
    return (EReference)dslRestrictionExecutorEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLRestrictionKnowledge()
  {
    return dslRestrictionKnowledgeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLRestrictionKnowledge_T()
  {
    return (EReference)dslRestrictionKnowledgeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLRestrictionKnowledge_Knowledge()
  {
    return (EReference)dslRestrictionKnowledgeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLRestrictionKnowledge_Knowledgeinterface()
  {
    return (EReference)dslRestrictionKnowledgeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLRestrictionManaged()
  {
    return dslRestrictionManagedEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLRestrictionManaged_T()
  {
    return (EReference)dslRestrictionManagedEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLRestrictionManaged_Managed()
  {
    return (EReference)dslRestrictionManagedEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLRestrictionManaged_Managedinterface()
  {
    return (EReference)dslRestrictionManagedEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLSensorBelongsTo()
  {
    return dslSensorBelongsToEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLSensorBelongsTo_Sensor()
  {
    return (EReference)dslSensorBelongsToEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLSensorBelongsTo_Managed()
  {
    return (EReference)dslSensorBelongsToEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLReferenceInputBelongsTo()
  {
    return dslReferenceInputBelongsToEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLReferenceInputBelongsTo_Reference()
  {
    return (EReference)dslReferenceInputBelongsToEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLReferenceInputBelongsTo_Knowledge()
  {
    return (EReference)dslReferenceInputBelongsToEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLEffectorBelongsTo()
  {
    return dslEffectorBelongsToEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLEffectorBelongsTo_Effector()
  {
    return (EReference)dslEffectorBelongsToEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLEffectorBelongsTo_Managed()
  {
    return (EReference)dslEffectorBelongsToEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLMonitorBelongsTo1()
  {
    return dslMonitorBelongsTo1EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLMonitorBelongsTo1_Monitor()
  {
    return (EReference)dslMonitorBelongsTo1EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLMonitorBelongsTo1_Cl()
  {
    return (EReference)dslMonitorBelongsTo1EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLMonitorBelongsTo2()
  {
    return dslMonitorBelongsTo2EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLMonitorBelongsTo2_Monitor()
  {
    return (EReference)dslMonitorBelongsTo2EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLMonitorBelongsTo2_Managing()
  {
    return (EReference)dslMonitorBelongsTo2EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLAnalyzerBelongsTo1()
  {
    return dslAnalyzerBelongsTo1EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLAnalyzerBelongsTo1_Analyzer()
  {
    return (EReference)dslAnalyzerBelongsTo1EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLAnalyzerBelongsTo1_Cl()
  {
    return (EReference)dslAnalyzerBelongsTo1EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLAnalyzerBelongsTo2()
  {
    return dslAnalyzerBelongsTo2EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLAnalyzerBelongsTo2_Analyzer()
  {
    return (EReference)dslAnalyzerBelongsTo2EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLAnalyzerBelongsTo2_Managing()
  {
    return (EReference)dslAnalyzerBelongsTo2EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLPlannerBelongsTo1()
  {
    return dslPlannerBelongsTo1EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLPlannerBelongsTo1_Planner()
  {
    return (EReference)dslPlannerBelongsTo1EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLPlannerBelongsTo1_Cl()
  {
    return (EReference)dslPlannerBelongsTo1EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLPlannerBelongsTo2()
  {
    return dslPlannerBelongsTo2EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLPlannerBelongsTo2_Planner()
  {
    return (EReference)dslPlannerBelongsTo2EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLPlannerBelongsTo2_Managing()
  {
    return (EReference)dslPlannerBelongsTo2EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLExecutorBelongsTo1()
  {
    return dslExecutorBelongsTo1EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLExecutorBelongsTo1_Executor()
  {
    return (EReference)dslExecutorBelongsTo1EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLExecutorBelongsTo1_Cl()
  {
    return (EReference)dslExecutorBelongsTo1EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLExecutorBelongsTo2()
  {
    return dslExecutorBelongsTo2EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLExecutorBelongsTo2_Executor()
  {
    return (EReference)dslExecutorBelongsTo2EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLExecutorBelongsTo2_Managing()
  {
    return (EReference)dslExecutorBelongsTo2EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLClBelongsTo1()
  {
    return dslClBelongsTo1EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLClBelongsTo1_Cl()
  {
    return (EReference)dslClBelongsTo1EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLClBelongsTo1_Clm()
  {
    return (EReference)dslClBelongsTo1EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLClBelongsTo2()
  {
    return dslClBelongsTo2EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLClBelongsTo2_Cl()
  {
    return (EReference)dslClBelongsTo2EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLClBelongsTo2_Managing()
  {
    return (EReference)dslClBelongsTo2EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLClmBelongsTo()
  {
    return dslClmBelongsToEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLClmBelongsTo_Cl()
  {
    return (EReference)dslClmBelongsToEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLClmBelongsTo_Managing()
  {
    return (EReference)dslClmBelongsToEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLMeasuredOuputBelongsTo()
  {
    return dslMeasuredOuputBelongsToEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLMeasuredOuputBelongsTo_Measured()
  {
    return (EReference)dslMeasuredOuputBelongsToEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLMeasuredOuputBelongsTo_Managed()
  {
    return (EReference)dslMeasuredOuputBelongsToEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLKnowledgeBelongsTo()
  {
    return dslKnowledgeBelongsToEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLKnowledgeBelongsTo_Knowledge()
  {
    return (EReference)dslKnowledgeBelongsToEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLKnowledgeBelongsTo_Managing()
  {
    return (EReference)dslKnowledgeBelongsToEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLManaging()
  {
    return dslManagingEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLManaged()
  {
    return dslManagedEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLManaged_Managedinterfaces()
  {
    return (EReference)dslManagedEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLControlLoopManager()
  {
    return dslControlLoopManagerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLControlLoopManager_Clminterfaces()
  {
    return (EReference)dslControlLoopManagerEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLControlLoop()
  {
    return dslControlLoopEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLControlLoop_Clinterfaces()
  {
    return (EReference)dslControlLoopEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLMonitor()
  {
    return dslMonitorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLMonitor_Monitorinterfaces()
  {
    return (EReference)dslMonitorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLAnalyzer()
  {
    return dslAnalyzerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLAnalyzer_Anlyzerinterfaces()
  {
    return (EReference)dslAnalyzerEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLPlanner()
  {
    return dslPlannerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLPlanner_Plannerinterfaces()
  {
    return (EReference)dslPlannerEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLExecutor()
  {
    return dslExecutorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLExecutor_Executorinterfaces()
  {
    return (EReference)dslExecutorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLKnowledge()
  {
    return dslKnowledgeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLKnowledge_Knowledgeinterfaces()
  {
    return (EReference)dslKnowledgeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLSensor()
  {
    return dslSensorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLSensor_Sensorinterfaces()
  {
    return (EReference)dslSensorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLEffector()
  {
    return dslEffectorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDSLEffector_Effectorinterfaces()
  {
    return (EReference)dslEffectorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLReferenceInput()
  {
    return dslReferenceInputEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDSLMeasuredOutput()
  {
    return dslMeasuredOutputEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getEffectorInterface()
  {
    return effectorInterfaceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getEffectorInterface_Name()
  {
    return (EAttribute)effectorInterfaceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSensorInterface()
  {
    return sensorInterfaceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSensorInterface_Name()
  {
    return (EAttribute)sensorInterfaceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMonitorInterface()
  {
    return monitorInterfaceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getMonitorInterface_Name()
  {
    return (EAttribute)monitorInterfaceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAnalyzerInterface()
  {
    return analyzerInterfaceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAnalyzerInterface_Name()
  {
    return (EAttribute)analyzerInterfaceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPlannerInterface()
  {
    return plannerInterfaceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPlannerInterface_Name()
  {
    return (EAttribute)plannerInterfaceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getExecutorInterface()
  {
    return executorInterfaceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getExecutorInterface_Name()
  {
    return (EAttribute)executorInterfaceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getKnowledgeInterface()
  {
    return knowledgeInterfaceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getKnowledgeInterface_Name()
  {
    return (EAttribute)knowledgeInterfaceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getControlLoopInterface()
  {
    return controlLoopInterfaceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getControlLoopInterface_Name()
  {
    return (EAttribute)controlLoopInterfaceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getControlLoopManagerInterface()
  {
    return controlLoopManagerInterfaceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getControlLoopManagerInterface_Name()
  {
    return (EAttribute)controlLoopManagerInterfaceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getManagedInterface()
  {
    return managedInterfaceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getManagedInterface_Name()
  {
    return (EAttribute)managedInterfaceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SasDslFactory getSasDslFactory()
  {
    return (SasDslFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    architectureDefinitionEClass = createEClass(ARCHITECTURE_DEFINITION);
    createEReference(architectureDefinitionEClass, ARCHITECTURE_DEFINITION__ABSTRACTIONS);
    createEReference(architectureDefinitionEClass, ARCHITECTURE_DEFINITION__COMPOSITIONS);
    createEReference(architectureDefinitionEClass, ARCHITECTURE_DEFINITION__RESTRICTIONS);

    dslAbstractionEClass = createEClass(DSL_ABSTRACTION);
    createEAttribute(dslAbstractionEClass, DSL_ABSTRACTION__NAME);

    dslCompositionEClass = createEClass(DSL_COMPOSITION);

    dslRestrictionEClass = createEClass(DSL_RESTRICTION);

    dslRestrictionEffectorEClass = createEClass(DSL_RESTRICTION_EFFECTOR);
    createEReference(dslRestrictionEffectorEClass, DSL_RESTRICTION_EFFECTOR__T);
    createEReference(dslRestrictionEffectorEClass, DSL_RESTRICTION_EFFECTOR__EFFECTOR);
    createEReference(dslRestrictionEffectorEClass, DSL_RESTRICTION_EFFECTOR__EFFECTORINTERFACE);

    dslRestrictionSensorEClass = createEClass(DSL_RESTRICTION_SENSOR);
    createEReference(dslRestrictionSensorEClass, DSL_RESTRICTION_SENSOR__T);
    createEReference(dslRestrictionSensorEClass, DSL_RESTRICTION_SENSOR__SENSOR);
    createEReference(dslRestrictionSensorEClass, DSL_RESTRICTION_SENSOR__SENSORINTERFACE);

    dslRestrictionMonitorEClass = createEClass(DSL_RESTRICTION_MONITOR);
    createEReference(dslRestrictionMonitorEClass, DSL_RESTRICTION_MONITOR__T);
    createEReference(dslRestrictionMonitorEClass, DSL_RESTRICTION_MONITOR__MONITOR);
    createEReference(dslRestrictionMonitorEClass, DSL_RESTRICTION_MONITOR__MONITORINTERFACE);

    dslRestrictionPlannerEClass = createEClass(DSL_RESTRICTION_PLANNER);
    createEReference(dslRestrictionPlannerEClass, DSL_RESTRICTION_PLANNER__T);
    createEReference(dslRestrictionPlannerEClass, DSL_RESTRICTION_PLANNER__PLANNER);
    createEReference(dslRestrictionPlannerEClass, DSL_RESTRICTION_PLANNER__PLANNERINTERFACE);

    dslRestrictionExecutorEClass = createEClass(DSL_RESTRICTION_EXECUTOR);
    createEReference(dslRestrictionExecutorEClass, DSL_RESTRICTION_EXECUTOR__T);
    createEReference(dslRestrictionExecutorEClass, DSL_RESTRICTION_EXECUTOR__EXECUTOR);
    createEReference(dslRestrictionExecutorEClass, DSL_RESTRICTION_EXECUTOR__EXECUTORINTERFACE);

    dslRestrictionKnowledgeEClass = createEClass(DSL_RESTRICTION_KNOWLEDGE);
    createEReference(dslRestrictionKnowledgeEClass, DSL_RESTRICTION_KNOWLEDGE__T);
    createEReference(dslRestrictionKnowledgeEClass, DSL_RESTRICTION_KNOWLEDGE__KNOWLEDGE);
    createEReference(dslRestrictionKnowledgeEClass, DSL_RESTRICTION_KNOWLEDGE__KNOWLEDGEINTERFACE);

    dslRestrictionManagedEClass = createEClass(DSL_RESTRICTION_MANAGED);
    createEReference(dslRestrictionManagedEClass, DSL_RESTRICTION_MANAGED__T);
    createEReference(dslRestrictionManagedEClass, DSL_RESTRICTION_MANAGED__MANAGED);
    createEReference(dslRestrictionManagedEClass, DSL_RESTRICTION_MANAGED__MANAGEDINTERFACE);

    dslSensorBelongsToEClass = createEClass(DSL_SENSOR_BELONGS_TO);
    createEReference(dslSensorBelongsToEClass, DSL_SENSOR_BELONGS_TO__SENSOR);
    createEReference(dslSensorBelongsToEClass, DSL_SENSOR_BELONGS_TO__MANAGED);

    dslReferenceInputBelongsToEClass = createEClass(DSL_REFERENCE_INPUT_BELONGS_TO);
    createEReference(dslReferenceInputBelongsToEClass, DSL_REFERENCE_INPUT_BELONGS_TO__REFERENCE);
    createEReference(dslReferenceInputBelongsToEClass, DSL_REFERENCE_INPUT_BELONGS_TO__KNOWLEDGE);

    dslEffectorBelongsToEClass = createEClass(DSL_EFFECTOR_BELONGS_TO);
    createEReference(dslEffectorBelongsToEClass, DSL_EFFECTOR_BELONGS_TO__EFFECTOR);
    createEReference(dslEffectorBelongsToEClass, DSL_EFFECTOR_BELONGS_TO__MANAGED);

    dslMonitorBelongsTo1EClass = createEClass(DSL_MONITOR_BELONGS_TO1);
    createEReference(dslMonitorBelongsTo1EClass, DSL_MONITOR_BELONGS_TO1__MONITOR);
    createEReference(dslMonitorBelongsTo1EClass, DSL_MONITOR_BELONGS_TO1__CL);

    dslMonitorBelongsTo2EClass = createEClass(DSL_MONITOR_BELONGS_TO2);
    createEReference(dslMonitorBelongsTo2EClass, DSL_MONITOR_BELONGS_TO2__MONITOR);
    createEReference(dslMonitorBelongsTo2EClass, DSL_MONITOR_BELONGS_TO2__MANAGING);

    dslAnalyzerBelongsTo1EClass = createEClass(DSL_ANALYZER_BELONGS_TO1);
    createEReference(dslAnalyzerBelongsTo1EClass, DSL_ANALYZER_BELONGS_TO1__ANALYZER);
    createEReference(dslAnalyzerBelongsTo1EClass, DSL_ANALYZER_BELONGS_TO1__CL);

    dslAnalyzerBelongsTo2EClass = createEClass(DSL_ANALYZER_BELONGS_TO2);
    createEReference(dslAnalyzerBelongsTo2EClass, DSL_ANALYZER_BELONGS_TO2__ANALYZER);
    createEReference(dslAnalyzerBelongsTo2EClass, DSL_ANALYZER_BELONGS_TO2__MANAGING);

    dslPlannerBelongsTo1EClass = createEClass(DSL_PLANNER_BELONGS_TO1);
    createEReference(dslPlannerBelongsTo1EClass, DSL_PLANNER_BELONGS_TO1__PLANNER);
    createEReference(dslPlannerBelongsTo1EClass, DSL_PLANNER_BELONGS_TO1__CL);

    dslPlannerBelongsTo2EClass = createEClass(DSL_PLANNER_BELONGS_TO2);
    createEReference(dslPlannerBelongsTo2EClass, DSL_PLANNER_BELONGS_TO2__PLANNER);
    createEReference(dslPlannerBelongsTo2EClass, DSL_PLANNER_BELONGS_TO2__MANAGING);

    dslExecutorBelongsTo1EClass = createEClass(DSL_EXECUTOR_BELONGS_TO1);
    createEReference(dslExecutorBelongsTo1EClass, DSL_EXECUTOR_BELONGS_TO1__EXECUTOR);
    createEReference(dslExecutorBelongsTo1EClass, DSL_EXECUTOR_BELONGS_TO1__CL);

    dslExecutorBelongsTo2EClass = createEClass(DSL_EXECUTOR_BELONGS_TO2);
    createEReference(dslExecutorBelongsTo2EClass, DSL_EXECUTOR_BELONGS_TO2__EXECUTOR);
    createEReference(dslExecutorBelongsTo2EClass, DSL_EXECUTOR_BELONGS_TO2__MANAGING);

    dslClBelongsTo1EClass = createEClass(DSL_CL_BELONGS_TO1);
    createEReference(dslClBelongsTo1EClass, DSL_CL_BELONGS_TO1__CL);
    createEReference(dslClBelongsTo1EClass, DSL_CL_BELONGS_TO1__CLM);

    dslClBelongsTo2EClass = createEClass(DSL_CL_BELONGS_TO2);
    createEReference(dslClBelongsTo2EClass, DSL_CL_BELONGS_TO2__CL);
    createEReference(dslClBelongsTo2EClass, DSL_CL_BELONGS_TO2__MANAGING);

    dslClmBelongsToEClass = createEClass(DSL_CLM_BELONGS_TO);
    createEReference(dslClmBelongsToEClass, DSL_CLM_BELONGS_TO__CL);
    createEReference(dslClmBelongsToEClass, DSL_CLM_BELONGS_TO__MANAGING);

    dslMeasuredOuputBelongsToEClass = createEClass(DSL_MEASURED_OUPUT_BELONGS_TO);
    createEReference(dslMeasuredOuputBelongsToEClass, DSL_MEASURED_OUPUT_BELONGS_TO__MEASURED);
    createEReference(dslMeasuredOuputBelongsToEClass, DSL_MEASURED_OUPUT_BELONGS_TO__MANAGED);

    dslKnowledgeBelongsToEClass = createEClass(DSL_KNOWLEDGE_BELONGS_TO);
    createEReference(dslKnowledgeBelongsToEClass, DSL_KNOWLEDGE_BELONGS_TO__KNOWLEDGE);
    createEReference(dslKnowledgeBelongsToEClass, DSL_KNOWLEDGE_BELONGS_TO__MANAGING);

    dslManagingEClass = createEClass(DSL_MANAGING);

    dslManagedEClass = createEClass(DSL_MANAGED);
    createEReference(dslManagedEClass, DSL_MANAGED__MANAGEDINTERFACES);

    dslControlLoopManagerEClass = createEClass(DSL_CONTROL_LOOP_MANAGER);
    createEReference(dslControlLoopManagerEClass, DSL_CONTROL_LOOP_MANAGER__CLMINTERFACES);

    dslControlLoopEClass = createEClass(DSL_CONTROL_LOOP);
    createEReference(dslControlLoopEClass, DSL_CONTROL_LOOP__CLINTERFACES);

    dslMonitorEClass = createEClass(DSL_MONITOR);
    createEReference(dslMonitorEClass, DSL_MONITOR__MONITORINTERFACES);

    dslAnalyzerEClass = createEClass(DSL_ANALYZER);
    createEReference(dslAnalyzerEClass, DSL_ANALYZER__ANLYZERINTERFACES);

    dslPlannerEClass = createEClass(DSL_PLANNER);
    createEReference(dslPlannerEClass, DSL_PLANNER__PLANNERINTERFACES);

    dslExecutorEClass = createEClass(DSL_EXECUTOR);
    createEReference(dslExecutorEClass, DSL_EXECUTOR__EXECUTORINTERFACES);

    dslKnowledgeEClass = createEClass(DSL_KNOWLEDGE);
    createEReference(dslKnowledgeEClass, DSL_KNOWLEDGE__KNOWLEDGEINTERFACES);

    dslSensorEClass = createEClass(DSL_SENSOR);
    createEReference(dslSensorEClass, DSL_SENSOR__SENSORINTERFACES);

    dslEffectorEClass = createEClass(DSL_EFFECTOR);
    createEReference(dslEffectorEClass, DSL_EFFECTOR__EFFECTORINTERFACES);

    dslReferenceInputEClass = createEClass(DSL_REFERENCE_INPUT);

    dslMeasuredOutputEClass = createEClass(DSL_MEASURED_OUTPUT);

    effectorInterfaceEClass = createEClass(EFFECTOR_INTERFACE);
    createEAttribute(effectorInterfaceEClass, EFFECTOR_INTERFACE__NAME);

    sensorInterfaceEClass = createEClass(SENSOR_INTERFACE);
    createEAttribute(sensorInterfaceEClass, SENSOR_INTERFACE__NAME);

    monitorInterfaceEClass = createEClass(MONITOR_INTERFACE);
    createEAttribute(monitorInterfaceEClass, MONITOR_INTERFACE__NAME);

    analyzerInterfaceEClass = createEClass(ANALYZER_INTERFACE);
    createEAttribute(analyzerInterfaceEClass, ANALYZER_INTERFACE__NAME);

    plannerInterfaceEClass = createEClass(PLANNER_INTERFACE);
    createEAttribute(plannerInterfaceEClass, PLANNER_INTERFACE__NAME);

    executorInterfaceEClass = createEClass(EXECUTOR_INTERFACE);
    createEAttribute(executorInterfaceEClass, EXECUTOR_INTERFACE__NAME);

    knowledgeInterfaceEClass = createEClass(KNOWLEDGE_INTERFACE);
    createEAttribute(knowledgeInterfaceEClass, KNOWLEDGE_INTERFACE__NAME);

    controlLoopInterfaceEClass = createEClass(CONTROL_LOOP_INTERFACE);
    createEAttribute(controlLoopInterfaceEClass, CONTROL_LOOP_INTERFACE__NAME);

    controlLoopManagerInterfaceEClass = createEClass(CONTROL_LOOP_MANAGER_INTERFACE);
    createEAttribute(controlLoopManagerInterfaceEClass, CONTROL_LOOP_MANAGER_INTERFACE__NAME);

    managedInterfaceEClass = createEClass(MANAGED_INTERFACE);
    createEAttribute(managedInterfaceEClass, MANAGED_INTERFACE__NAME);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    dslRestrictionEffectorEClass.getESuperTypes().add(this.getDSLRestriction());
    dslRestrictionSensorEClass.getESuperTypes().add(this.getDSLRestriction());
    dslRestrictionMonitorEClass.getESuperTypes().add(this.getDSLRestriction());
    dslRestrictionPlannerEClass.getESuperTypes().add(this.getDSLRestriction());
    dslRestrictionExecutorEClass.getESuperTypes().add(this.getDSLRestriction());
    dslRestrictionKnowledgeEClass.getESuperTypes().add(this.getDSLRestriction());
    dslRestrictionManagedEClass.getESuperTypes().add(this.getDSLRestriction());
    dslSensorBelongsToEClass.getESuperTypes().add(this.getDSLComposition());
    dslReferenceInputBelongsToEClass.getESuperTypes().add(this.getDSLComposition());
    dslEffectorBelongsToEClass.getESuperTypes().add(this.getDSLComposition());
    dslMonitorBelongsTo1EClass.getESuperTypes().add(this.getDSLComposition());
    dslMonitorBelongsTo2EClass.getESuperTypes().add(this.getDSLComposition());
    dslAnalyzerBelongsTo1EClass.getESuperTypes().add(this.getDSLComposition());
    dslAnalyzerBelongsTo2EClass.getESuperTypes().add(this.getDSLComposition());
    dslPlannerBelongsTo1EClass.getESuperTypes().add(this.getDSLComposition());
    dslPlannerBelongsTo2EClass.getESuperTypes().add(this.getDSLComposition());
    dslExecutorBelongsTo1EClass.getESuperTypes().add(this.getDSLComposition());
    dslExecutorBelongsTo2EClass.getESuperTypes().add(this.getDSLComposition());
    dslClBelongsTo1EClass.getESuperTypes().add(this.getDSLComposition());
    dslClBelongsTo2EClass.getESuperTypes().add(this.getDSLComposition());
    dslClmBelongsToEClass.getESuperTypes().add(this.getDSLComposition());
    dslMeasuredOuputBelongsToEClass.getESuperTypes().add(this.getDSLComposition());
    dslKnowledgeBelongsToEClass.getESuperTypes().add(this.getDSLComposition());
    dslManagingEClass.getESuperTypes().add(this.getDSLAbstraction());
    dslManagedEClass.getESuperTypes().add(this.getDSLAbstraction());
    dslControlLoopManagerEClass.getESuperTypes().add(this.getDSLAbstraction());
    dslControlLoopEClass.getESuperTypes().add(this.getDSLAbstraction());
    dslMonitorEClass.getESuperTypes().add(this.getDSLAbstraction());
    dslAnalyzerEClass.getESuperTypes().add(this.getDSLAbstraction());
    dslPlannerEClass.getESuperTypes().add(this.getDSLAbstraction());
    dslExecutorEClass.getESuperTypes().add(this.getDSLAbstraction());
    dslKnowledgeEClass.getESuperTypes().add(this.getDSLAbstraction());
    dslSensorEClass.getESuperTypes().add(this.getDSLAbstraction());
    dslEffectorEClass.getESuperTypes().add(this.getDSLAbstraction());
    dslReferenceInputEClass.getESuperTypes().add(this.getDSLAbstraction());
    dslMeasuredOutputEClass.getESuperTypes().add(this.getDSLAbstraction());

    // Initialize classes and features; add operations and parameters
    initEClass(architectureDefinitionEClass, ArchitectureDefinition.class, "ArchitectureDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getArchitectureDefinition_Abstractions(), this.getDSLAbstraction(), null, "abstractions", null, 0, -1, ArchitectureDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getArchitectureDefinition_Compositions(), this.getDSLComposition(), null, "compositions", null, 0, -1, ArchitectureDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getArchitectureDefinition_Restrictions(), this.getDSLRestriction(), null, "restrictions", null, 0, -1, ArchitectureDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslAbstractionEClass, DSLAbstraction.class, "DSLAbstraction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDSLAbstraction_Name(), ecorePackage.getEString(), "name", null, 0, 1, DSLAbstraction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslCompositionEClass, DSLComposition.class, "DSLComposition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(dslRestrictionEClass, DSLRestriction.class, "DSLRestriction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(dslRestrictionEffectorEClass, DSLRestrictionEffector.class, "DSLRestrictionEffector", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLRestrictionEffector_T(), this.getDSLExecutor(), null, "t", null, 0, 1, DSLRestrictionEffector.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLRestrictionEffector_Effector(), this.getDSLEffector(), null, "effector", null, 0, 1, DSLRestrictionEffector.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLRestrictionEffector_Effectorinterface(), this.getEffectorInterface(), null, "effectorinterface", null, 0, 1, DSLRestrictionEffector.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslRestrictionSensorEClass, DSLRestrictionSensor.class, "DSLRestrictionSensor", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLRestrictionSensor_T(), this.getDSLMonitor(), null, "t", null, 0, 1, DSLRestrictionSensor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLRestrictionSensor_Sensor(), this.getDSLSensor(), null, "sensor", null, 0, 1, DSLRestrictionSensor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLRestrictionSensor_Sensorinterface(), this.getSensorInterface(), null, "sensorinterface", null, 0, 1, DSLRestrictionSensor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslRestrictionMonitorEClass, DSLRestrictionMonitor.class, "DSLRestrictionMonitor", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLRestrictionMonitor_T(), this.getDSLAnalyzer(), null, "t", null, 0, 1, DSLRestrictionMonitor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLRestrictionMonitor_Monitor(), this.getDSLMonitor(), null, "monitor", null, 0, 1, DSLRestrictionMonitor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLRestrictionMonitor_Monitorinterface(), this.getMonitorInterface(), null, "monitorinterface", null, 0, 1, DSLRestrictionMonitor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslRestrictionPlannerEClass, DSLRestrictionPlanner.class, "DSLRestrictionPlanner", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLRestrictionPlanner_T(), this.getDSLAnalyzer(), null, "t", null, 0, 1, DSLRestrictionPlanner.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLRestrictionPlanner_Planner(), this.getDSLPlanner(), null, "planner", null, 0, 1, DSLRestrictionPlanner.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLRestrictionPlanner_Plannerinterface(), this.getPlannerInterface(), null, "plannerinterface", null, 0, 1, DSLRestrictionPlanner.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslRestrictionExecutorEClass, DSLRestrictionExecutor.class, "DSLRestrictionExecutor", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLRestrictionExecutor_T(), this.getDSLAnalyzer(), null, "t", null, 0, 1, DSLRestrictionExecutor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLRestrictionExecutor_Executor(), this.getDSLExecutor(), null, "executor", null, 0, 1, DSLRestrictionExecutor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLRestrictionExecutor_Executorinterface(), this.getExecutorInterface(), null, "executorinterface", null, 0, 1, DSLRestrictionExecutor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslRestrictionKnowledgeEClass, DSLRestrictionKnowledge.class, "DSLRestrictionKnowledge", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLRestrictionKnowledge_T(), this.getDSLAbstraction(), null, "t", null, 0, 1, DSLRestrictionKnowledge.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLRestrictionKnowledge_Knowledge(), this.getDSLKnowledge(), null, "knowledge", null, 0, 1, DSLRestrictionKnowledge.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLRestrictionKnowledge_Knowledgeinterface(), this.getKnowledgeInterface(), null, "knowledgeinterface", null, 0, 1, DSLRestrictionKnowledge.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslRestrictionManagedEClass, DSLRestrictionManaged.class, "DSLRestrictionManaged", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLRestrictionManaged_T(), this.getDSLManaging(), null, "t", null, 0, 1, DSLRestrictionManaged.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLRestrictionManaged_Managed(), this.getDSLManaged(), null, "managed", null, 0, 1, DSLRestrictionManaged.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLRestrictionManaged_Managedinterface(), this.getManagedInterface(), null, "managedinterface", null, 0, 1, DSLRestrictionManaged.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslSensorBelongsToEClass, DSLSensorBelongsTo.class, "DSLSensorBelongsTo", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLSensorBelongsTo_Sensor(), this.getDSLSensor(), null, "sensor", null, 0, 1, DSLSensorBelongsTo.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLSensorBelongsTo_Managed(), this.getDSLManaged(), null, "managed", null, 0, 1, DSLSensorBelongsTo.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslReferenceInputBelongsToEClass, DSLReferenceInputBelongsTo.class, "DSLReferenceInputBelongsTo", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLReferenceInputBelongsTo_Reference(), this.getDSLReferenceInput(), null, "reference", null, 0, 1, DSLReferenceInputBelongsTo.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLReferenceInputBelongsTo_Knowledge(), this.getDSLKnowledge(), null, "knowledge", null, 0, 1, DSLReferenceInputBelongsTo.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslEffectorBelongsToEClass, DSLEffectorBelongsTo.class, "DSLEffectorBelongsTo", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLEffectorBelongsTo_Effector(), this.getDSLEffector(), null, "effector", null, 0, 1, DSLEffectorBelongsTo.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLEffectorBelongsTo_Managed(), this.getDSLManaged(), null, "managed", null, 0, 1, DSLEffectorBelongsTo.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslMonitorBelongsTo1EClass, DSLMonitorBelongsTo1.class, "DSLMonitorBelongsTo1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLMonitorBelongsTo1_Monitor(), this.getDSLMonitor(), null, "monitor", null, 0, 1, DSLMonitorBelongsTo1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLMonitorBelongsTo1_Cl(), this.getDSLControlLoop(), null, "cl", null, 0, 1, DSLMonitorBelongsTo1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslMonitorBelongsTo2EClass, DSLMonitorBelongsTo2.class, "DSLMonitorBelongsTo2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLMonitorBelongsTo2_Monitor(), this.getDSLMonitor(), null, "monitor", null, 0, 1, DSLMonitorBelongsTo2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLMonitorBelongsTo2_Managing(), this.getDSLManaging(), null, "managing", null, 0, 1, DSLMonitorBelongsTo2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslAnalyzerBelongsTo1EClass, DSLAnalyzerBelongsTo1.class, "DSLAnalyzerBelongsTo1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLAnalyzerBelongsTo1_Analyzer(), this.getDSLAnalyzer(), null, "analyzer", null, 0, 1, DSLAnalyzerBelongsTo1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLAnalyzerBelongsTo1_Cl(), this.getDSLControlLoop(), null, "cl", null, 0, 1, DSLAnalyzerBelongsTo1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslAnalyzerBelongsTo2EClass, DSLAnalyzerBelongsTo2.class, "DSLAnalyzerBelongsTo2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLAnalyzerBelongsTo2_Analyzer(), this.getDSLAnalyzer(), null, "analyzer", null, 0, 1, DSLAnalyzerBelongsTo2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLAnalyzerBelongsTo2_Managing(), this.getDSLManaging(), null, "managing", null, 0, 1, DSLAnalyzerBelongsTo2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslPlannerBelongsTo1EClass, DSLPlannerBelongsTo1.class, "DSLPlannerBelongsTo1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLPlannerBelongsTo1_Planner(), this.getDSLPlanner(), null, "planner", null, 0, 1, DSLPlannerBelongsTo1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLPlannerBelongsTo1_Cl(), this.getDSLControlLoop(), null, "cl", null, 0, 1, DSLPlannerBelongsTo1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslPlannerBelongsTo2EClass, DSLPlannerBelongsTo2.class, "DSLPlannerBelongsTo2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLPlannerBelongsTo2_Planner(), this.getDSLPlanner(), null, "planner", null, 0, 1, DSLPlannerBelongsTo2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLPlannerBelongsTo2_Managing(), this.getDSLManaging(), null, "managing", null, 0, 1, DSLPlannerBelongsTo2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslExecutorBelongsTo1EClass, DSLExecutorBelongsTo1.class, "DSLExecutorBelongsTo1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLExecutorBelongsTo1_Executor(), this.getDSLExecutor(), null, "executor", null, 0, 1, DSLExecutorBelongsTo1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLExecutorBelongsTo1_Cl(), this.getDSLControlLoop(), null, "cl", null, 0, 1, DSLExecutorBelongsTo1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslExecutorBelongsTo2EClass, DSLExecutorBelongsTo2.class, "DSLExecutorBelongsTo2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLExecutorBelongsTo2_Executor(), this.getDSLExecutor(), null, "executor", null, 0, 1, DSLExecutorBelongsTo2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLExecutorBelongsTo2_Managing(), this.getDSLManaging(), null, "managing", null, 0, 1, DSLExecutorBelongsTo2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslClBelongsTo1EClass, DSLClBelongsTo1.class, "DSLClBelongsTo1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLClBelongsTo1_Cl(), this.getDSLControlLoop(), null, "cl", null, 0, 1, DSLClBelongsTo1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLClBelongsTo1_Clm(), this.getDSLControlLoopManager(), null, "clm", null, 0, 1, DSLClBelongsTo1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslClBelongsTo2EClass, DSLClBelongsTo2.class, "DSLClBelongsTo2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLClBelongsTo2_Cl(), this.getDSLControlLoop(), null, "cl", null, 0, 1, DSLClBelongsTo2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLClBelongsTo2_Managing(), this.getDSLManaging(), null, "managing", null, 0, 1, DSLClBelongsTo2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslClmBelongsToEClass, DSLClmBelongsTo.class, "DSLClmBelongsTo", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLClmBelongsTo_Cl(), this.getDSLControlLoopManager(), null, "cl", null, 0, 1, DSLClmBelongsTo.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLClmBelongsTo_Managing(), this.getDSLManaging(), null, "managing", null, 0, 1, DSLClmBelongsTo.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslMeasuredOuputBelongsToEClass, DSLMeasuredOuputBelongsTo.class, "DSLMeasuredOuputBelongsTo", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLMeasuredOuputBelongsTo_Measured(), this.getDSLMeasuredOutput(), null, "measured", null, 0, 1, DSLMeasuredOuputBelongsTo.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLMeasuredOuputBelongsTo_Managed(), this.getDSLManaged(), null, "managed", null, 0, 1, DSLMeasuredOuputBelongsTo.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslKnowledgeBelongsToEClass, DSLKnowledgeBelongsTo.class, "DSLKnowledgeBelongsTo", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLKnowledgeBelongsTo_Knowledge(), this.getDSLKnowledge(), null, "knowledge", null, 0, 1, DSLKnowledgeBelongsTo.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDSLKnowledgeBelongsTo_Managing(), this.getDSLManaging(), null, "managing", null, 0, 1, DSLKnowledgeBelongsTo.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslManagingEClass, DSLManaging.class, "DSLManaging", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(dslManagedEClass, DSLManaged.class, "DSLManaged", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLManaged_Managedinterfaces(), this.getManagedInterface(), null, "managedinterfaces", null, 0, -1, DSLManaged.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslControlLoopManagerEClass, DSLControlLoopManager.class, "DSLControlLoopManager", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLControlLoopManager_Clminterfaces(), this.getControlLoopManagerInterface(), null, "clminterfaces", null, 0, -1, DSLControlLoopManager.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslControlLoopEClass, DSLControlLoop.class, "DSLControlLoop", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLControlLoop_Clinterfaces(), this.getControlLoopInterface(), null, "clinterfaces", null, 0, -1, DSLControlLoop.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslMonitorEClass, DSLMonitor.class, "DSLMonitor", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLMonitor_Monitorinterfaces(), this.getMonitorInterface(), null, "monitorinterfaces", null, 0, -1, DSLMonitor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslAnalyzerEClass, DSLAnalyzer.class, "DSLAnalyzer", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLAnalyzer_Anlyzerinterfaces(), this.getAnalyzerInterface(), null, "anlyzerinterfaces", null, 0, -1, DSLAnalyzer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslPlannerEClass, DSLPlanner.class, "DSLPlanner", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLPlanner_Plannerinterfaces(), this.getPlannerInterface(), null, "plannerinterfaces", null, 0, -1, DSLPlanner.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslExecutorEClass, DSLExecutor.class, "DSLExecutor", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLExecutor_Executorinterfaces(), this.getExecutorInterface(), null, "executorinterfaces", null, 0, -1, DSLExecutor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslKnowledgeEClass, DSLKnowledge.class, "DSLKnowledge", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLKnowledge_Knowledgeinterfaces(), this.getKnowledgeInterface(), null, "knowledgeinterfaces", null, 0, -1, DSLKnowledge.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslSensorEClass, DSLSensor.class, "DSLSensor", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLSensor_Sensorinterfaces(), this.getSensorInterface(), null, "sensorinterfaces", null, 0, -1, DSLSensor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslEffectorEClass, DSLEffector.class, "DSLEffector", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDSLEffector_Effectorinterfaces(), this.getEffectorInterface(), null, "effectorinterfaces", null, 0, -1, DSLEffector.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dslReferenceInputEClass, DSLReferenceInput.class, "DSLReferenceInput", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(dslMeasuredOutputEClass, DSLMeasuredOutput.class, "DSLMeasuredOutput", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(effectorInterfaceEClass, EffectorInterface.class, "EffectorInterface", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEffectorInterface_Name(), ecorePackage.getEString(), "name", null, 0, 1, EffectorInterface.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(sensorInterfaceEClass, SensorInterface.class, "SensorInterface", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSensorInterface_Name(), ecorePackage.getEString(), "name", null, 0, 1, SensorInterface.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(monitorInterfaceEClass, MonitorInterface.class, "MonitorInterface", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMonitorInterface_Name(), ecorePackage.getEString(), "name", null, 0, 1, MonitorInterface.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(analyzerInterfaceEClass, AnalyzerInterface.class, "AnalyzerInterface", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAnalyzerInterface_Name(), ecorePackage.getEString(), "name", null, 0, 1, AnalyzerInterface.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(plannerInterfaceEClass, PlannerInterface.class, "PlannerInterface", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPlannerInterface_Name(), ecorePackage.getEString(), "name", null, 0, 1, PlannerInterface.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(executorInterfaceEClass, ExecutorInterface.class, "ExecutorInterface", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getExecutorInterface_Name(), ecorePackage.getEString(), "name", null, 0, 1, ExecutorInterface.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(knowledgeInterfaceEClass, KnowledgeInterface.class, "KnowledgeInterface", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getKnowledgeInterface_Name(), ecorePackage.getEString(), "name", null, 0, 1, KnowledgeInterface.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(controlLoopInterfaceEClass, ControlLoopInterface.class, "ControlLoopInterface", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getControlLoopInterface_Name(), ecorePackage.getEString(), "name", null, 0, 1, ControlLoopInterface.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(controlLoopManagerInterfaceEClass, ControlLoopManagerInterface.class, "ControlLoopManagerInterface", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getControlLoopManagerInterface_Name(), ecorePackage.getEString(), "name", null, 0, 1, ControlLoopManagerInterface.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(managedInterfaceEClass, ManagedInterface.class, "ManagedInterface", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getManagedInterface_Name(), ecorePackage.getEString(), "name", null, 0, 1, ManagedInterface.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //SasDslPackageImpl
