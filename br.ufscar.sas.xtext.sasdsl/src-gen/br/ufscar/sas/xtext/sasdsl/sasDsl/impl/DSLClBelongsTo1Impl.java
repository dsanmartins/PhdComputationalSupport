/**
 * generated by Xtext 2.10.0
 */
package br.ufscar.sas.xtext.sasdsl.sasDsl.impl;

import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLClBelongsTo1;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLControlLoop;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLControlLoopManager;
import br.ufscar.sas.xtext.sasdsl.sasDsl.SasDslPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>DSL Cl Belongs To1</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.ufscar.sas.xtext.sasdsl.sasDsl.impl.DSLClBelongsTo1Impl#getCl <em>Cl</em>}</li>
 *   <li>{@link br.ufscar.sas.xtext.sasdsl.sasDsl.impl.DSLClBelongsTo1Impl#getClm <em>Clm</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DSLClBelongsTo1Impl extends DSLCompositionImpl implements DSLClBelongsTo1
{
  /**
   * The cached value of the '{@link #getCl() <em>Cl</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCl()
   * @generated
   * @ordered
   */
  protected DSLControlLoop cl;

  /**
   * The cached value of the '{@link #getClm() <em>Clm</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClm()
   * @generated
   * @ordered
   */
  protected DSLControlLoopManager clm;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DSLClBelongsTo1Impl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SasDslPackage.Literals.DSL_CL_BELONGS_TO1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DSLControlLoop getCl()
  {
    if (cl != null && cl.eIsProxy())
    {
      InternalEObject oldCl = (InternalEObject)cl;
      cl = (DSLControlLoop)eResolveProxy(oldCl);
      if (cl != oldCl)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SasDslPackage.DSL_CL_BELONGS_TO1__CL, oldCl, cl));
      }
    }
    return cl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DSLControlLoop basicGetCl()
  {
    return cl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCl(DSLControlLoop newCl)
  {
    DSLControlLoop oldCl = cl;
    cl = newCl;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SasDslPackage.DSL_CL_BELONGS_TO1__CL, oldCl, cl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DSLControlLoopManager getClm()
  {
    if (clm != null && clm.eIsProxy())
    {
      InternalEObject oldClm = (InternalEObject)clm;
      clm = (DSLControlLoopManager)eResolveProxy(oldClm);
      if (clm != oldClm)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SasDslPackage.DSL_CL_BELONGS_TO1__CLM, oldClm, clm));
      }
    }
    return clm;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DSLControlLoopManager basicGetClm()
  {
    return clm;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setClm(DSLControlLoopManager newClm)
  {
    DSLControlLoopManager oldClm = clm;
    clm = newClm;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SasDslPackage.DSL_CL_BELONGS_TO1__CLM, oldClm, clm));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SasDslPackage.DSL_CL_BELONGS_TO1__CL:
        if (resolve) return getCl();
        return basicGetCl();
      case SasDslPackage.DSL_CL_BELONGS_TO1__CLM:
        if (resolve) return getClm();
        return basicGetClm();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SasDslPackage.DSL_CL_BELONGS_TO1__CL:
        setCl((DSLControlLoop)newValue);
        return;
      case SasDslPackage.DSL_CL_BELONGS_TO1__CLM:
        setClm((DSLControlLoopManager)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SasDslPackage.DSL_CL_BELONGS_TO1__CL:
        setCl((DSLControlLoop)null);
        return;
      case SasDslPackage.DSL_CL_BELONGS_TO1__CLM:
        setClm((DSLControlLoopManager)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SasDslPackage.DSL_CL_BELONGS_TO1__CL:
        return cl != null;
      case SasDslPackage.DSL_CL_BELONGS_TO1__CLM:
        return clm != null;
    }
    return super.eIsSet(featureID);
  }

} //DSLClBelongsTo1Impl
