/**
 * generated by Xtext 2.10.0
 */
package br.ufscar.sas.xtext.sasdsl.sasDsl.impl;

import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLEffector;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLExecutor;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLRestrictionEffector;
import br.ufscar.sas.xtext.sasdsl.sasDsl.EffectorInterface;
import br.ufscar.sas.xtext.sasdsl.sasDsl.SasDslPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>DSL Restriction Effector</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.ufscar.sas.xtext.sasdsl.sasDsl.impl.DSLRestrictionEffectorImpl#getT <em>T</em>}</li>
 *   <li>{@link br.ufscar.sas.xtext.sasdsl.sasDsl.impl.DSLRestrictionEffectorImpl#getEffector <em>Effector</em>}</li>
 *   <li>{@link br.ufscar.sas.xtext.sasdsl.sasDsl.impl.DSLRestrictionEffectorImpl#getEffectorinterface <em>Effectorinterface</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DSLRestrictionEffectorImpl extends DSLRestrictionImpl implements DSLRestrictionEffector
{
  /**
   * The cached value of the '{@link #getT() <em>T</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getT()
   * @generated
   * @ordered
   */
  protected DSLExecutor t;

  /**
   * The cached value of the '{@link #getEffector() <em>Effector</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEffector()
   * @generated
   * @ordered
   */
  protected DSLEffector effector;

  /**
   * The cached value of the '{@link #getEffectorinterface() <em>Effectorinterface</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEffectorinterface()
   * @generated
   * @ordered
   */
  protected EffectorInterface effectorinterface;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DSLRestrictionEffectorImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SasDslPackage.Literals.DSL_RESTRICTION_EFFECTOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DSLExecutor getT()
  {
    if (t != null && t.eIsProxy())
    {
      InternalEObject oldT = (InternalEObject)t;
      t = (DSLExecutor)eResolveProxy(oldT);
      if (t != oldT)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SasDslPackage.DSL_RESTRICTION_EFFECTOR__T, oldT, t));
      }
    }
    return t;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DSLExecutor basicGetT()
  {
    return t;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setT(DSLExecutor newT)
  {
    DSLExecutor oldT = t;
    t = newT;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SasDslPackage.DSL_RESTRICTION_EFFECTOR__T, oldT, t));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DSLEffector getEffector()
  {
    if (effector != null && effector.eIsProxy())
    {
      InternalEObject oldEffector = (InternalEObject)effector;
      effector = (DSLEffector)eResolveProxy(oldEffector);
      if (effector != oldEffector)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SasDslPackage.DSL_RESTRICTION_EFFECTOR__EFFECTOR, oldEffector, effector));
      }
    }
    return effector;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DSLEffector basicGetEffector()
  {
    return effector;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEffector(DSLEffector newEffector)
  {
    DSLEffector oldEffector = effector;
    effector = newEffector;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SasDslPackage.DSL_RESTRICTION_EFFECTOR__EFFECTOR, oldEffector, effector));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EffectorInterface getEffectorinterface()
  {
    if (effectorinterface != null && effectorinterface.eIsProxy())
    {
      InternalEObject oldEffectorinterface = (InternalEObject)effectorinterface;
      effectorinterface = (EffectorInterface)eResolveProxy(oldEffectorinterface);
      if (effectorinterface != oldEffectorinterface)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SasDslPackage.DSL_RESTRICTION_EFFECTOR__EFFECTORINTERFACE, oldEffectorinterface, effectorinterface));
      }
    }
    return effectorinterface;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EffectorInterface basicGetEffectorinterface()
  {
    return effectorinterface;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEffectorinterface(EffectorInterface newEffectorinterface)
  {
    EffectorInterface oldEffectorinterface = effectorinterface;
    effectorinterface = newEffectorinterface;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SasDslPackage.DSL_RESTRICTION_EFFECTOR__EFFECTORINTERFACE, oldEffectorinterface, effectorinterface));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SasDslPackage.DSL_RESTRICTION_EFFECTOR__T:
        if (resolve) return getT();
        return basicGetT();
      case SasDslPackage.DSL_RESTRICTION_EFFECTOR__EFFECTOR:
        if (resolve) return getEffector();
        return basicGetEffector();
      case SasDslPackage.DSL_RESTRICTION_EFFECTOR__EFFECTORINTERFACE:
        if (resolve) return getEffectorinterface();
        return basicGetEffectorinterface();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SasDslPackage.DSL_RESTRICTION_EFFECTOR__T:
        setT((DSLExecutor)newValue);
        return;
      case SasDslPackage.DSL_RESTRICTION_EFFECTOR__EFFECTOR:
        setEffector((DSLEffector)newValue);
        return;
      case SasDslPackage.DSL_RESTRICTION_EFFECTOR__EFFECTORINTERFACE:
        setEffectorinterface((EffectorInterface)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SasDslPackage.DSL_RESTRICTION_EFFECTOR__T:
        setT((DSLExecutor)null);
        return;
      case SasDslPackage.DSL_RESTRICTION_EFFECTOR__EFFECTOR:
        setEffector((DSLEffector)null);
        return;
      case SasDslPackage.DSL_RESTRICTION_EFFECTOR__EFFECTORINTERFACE:
        setEffectorinterface((EffectorInterface)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SasDslPackage.DSL_RESTRICTION_EFFECTOR__T:
        return t != null;
      case SasDslPackage.DSL_RESTRICTION_EFFECTOR__EFFECTOR:
        return effector != null;
      case SasDslPackage.DSL_RESTRICTION_EFFECTOR__EFFECTORINTERFACE:
        return effectorinterface != null;
    }
    return super.eIsSet(featureID);
  }

} //DSLRestrictionEffectorImpl
