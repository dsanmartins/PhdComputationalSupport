/**
 * generated by Xtext 2.10.0
 */
package br.ufscar.sas.xtext.sasdsl.sasDsl.impl;

import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLProbe;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLRestrictionProbe;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLSensor;
import br.ufscar.sas.xtext.sasdsl.sasDsl.ProbeInterface;
import br.ufscar.sas.xtext.sasdsl.sasDsl.SasDslPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>DSL Restriction Probe</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.ufscar.sas.xtext.sasdsl.sasDsl.impl.DSLRestrictionProbeImpl#getT <em>T</em>}</li>
 *   <li>{@link br.ufscar.sas.xtext.sasdsl.sasDsl.impl.DSLRestrictionProbeImpl#getProbe <em>Probe</em>}</li>
 *   <li>{@link br.ufscar.sas.xtext.sasdsl.sasDsl.impl.DSLRestrictionProbeImpl#getProbeinterface <em>Probeinterface</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DSLRestrictionProbeImpl extends DSLRestrictionImpl implements DSLRestrictionProbe
{
  /**
   * The cached value of the '{@link #getT() <em>T</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getT()
   * @generated
   * @ordered
   */
  protected DSLSensor t;

  /**
   * The cached value of the '{@link #getProbe() <em>Probe</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProbe()
   * @generated
   * @ordered
   */
  protected DSLProbe probe;

  /**
   * The cached value of the '{@link #getProbeinterface() <em>Probeinterface</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProbeinterface()
   * @generated
   * @ordered
   */
  protected ProbeInterface probeinterface;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DSLRestrictionProbeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SasDslPackage.Literals.DSL_RESTRICTION_PROBE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DSLSensor getT()
  {
    if (t != null && t.eIsProxy())
    {
      InternalEObject oldT = (InternalEObject)t;
      t = (DSLSensor)eResolveProxy(oldT);
      if (t != oldT)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SasDslPackage.DSL_RESTRICTION_PROBE__T, oldT, t));
      }
    }
    return t;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DSLSensor basicGetT()
  {
    return t;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setT(DSLSensor newT)
  {
    DSLSensor oldT = t;
    t = newT;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SasDslPackage.DSL_RESTRICTION_PROBE__T, oldT, t));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DSLProbe getProbe()
  {
    if (probe != null && probe.eIsProxy())
    {
      InternalEObject oldProbe = (InternalEObject)probe;
      probe = (DSLProbe)eResolveProxy(oldProbe);
      if (probe != oldProbe)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SasDslPackage.DSL_RESTRICTION_PROBE__PROBE, oldProbe, probe));
      }
    }
    return probe;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DSLProbe basicGetProbe()
  {
    return probe;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setProbe(DSLProbe newProbe)
  {
    DSLProbe oldProbe = probe;
    probe = newProbe;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SasDslPackage.DSL_RESTRICTION_PROBE__PROBE, oldProbe, probe));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProbeInterface getProbeinterface()
  {
    if (probeinterface != null && probeinterface.eIsProxy())
    {
      InternalEObject oldProbeinterface = (InternalEObject)probeinterface;
      probeinterface = (ProbeInterface)eResolveProxy(oldProbeinterface);
      if (probeinterface != oldProbeinterface)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SasDslPackage.DSL_RESTRICTION_PROBE__PROBEINTERFACE, oldProbeinterface, probeinterface));
      }
    }
    return probeinterface;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProbeInterface basicGetProbeinterface()
  {
    return probeinterface;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setProbeinterface(ProbeInterface newProbeinterface)
  {
    ProbeInterface oldProbeinterface = probeinterface;
    probeinterface = newProbeinterface;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SasDslPackage.DSL_RESTRICTION_PROBE__PROBEINTERFACE, oldProbeinterface, probeinterface));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SasDslPackage.DSL_RESTRICTION_PROBE__T:
        if (resolve) return getT();
        return basicGetT();
      case SasDslPackage.DSL_RESTRICTION_PROBE__PROBE:
        if (resolve) return getProbe();
        return basicGetProbe();
      case SasDslPackage.DSL_RESTRICTION_PROBE__PROBEINTERFACE:
        if (resolve) return getProbeinterface();
        return basicGetProbeinterface();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SasDslPackage.DSL_RESTRICTION_PROBE__T:
        setT((DSLSensor)newValue);
        return;
      case SasDslPackage.DSL_RESTRICTION_PROBE__PROBE:
        setProbe((DSLProbe)newValue);
        return;
      case SasDslPackage.DSL_RESTRICTION_PROBE__PROBEINTERFACE:
        setProbeinterface((ProbeInterface)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SasDslPackage.DSL_RESTRICTION_PROBE__T:
        setT((DSLSensor)null);
        return;
      case SasDslPackage.DSL_RESTRICTION_PROBE__PROBE:
        setProbe((DSLProbe)null);
        return;
      case SasDslPackage.DSL_RESTRICTION_PROBE__PROBEINTERFACE:
        setProbeinterface((ProbeInterface)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SasDslPackage.DSL_RESTRICTION_PROBE__T:
        return t != null;
      case SasDslPackage.DSL_RESTRICTION_PROBE__PROBE:
        return probe != null;
      case SasDslPackage.DSL_RESTRICTION_PROBE__PROBEINTERFACE:
        return probeinterface != null;
    }
    return super.eIsSet(featureID);
  }

} //DSLRestrictionProbeImpl
