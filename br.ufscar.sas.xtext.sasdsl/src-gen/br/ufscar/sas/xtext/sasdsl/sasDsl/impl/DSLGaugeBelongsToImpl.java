/**
 * generated by Xtext 2.10.0
 */
package br.ufscar.sas.xtext.sasdsl.sasDsl.impl;

import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLGauge;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLGaugeBelongsTo;
import br.ufscar.sas.xtext.sasdsl.sasDsl.DSLManaged;
import br.ufscar.sas.xtext.sasdsl.sasDsl.SasDslPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>DSL Gauge Belongs To</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.ufscar.sas.xtext.sasdsl.sasDsl.impl.DSLGaugeBelongsToImpl#getGauge <em>Gauge</em>}</li>
 *   <li>{@link br.ufscar.sas.xtext.sasdsl.sasDsl.impl.DSLGaugeBelongsToImpl#getManaged <em>Managed</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DSLGaugeBelongsToImpl extends DSLCompositionImpl implements DSLGaugeBelongsTo
{
  /**
   * The cached value of the '{@link #getGauge() <em>Gauge</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGauge()
   * @generated
   * @ordered
   */
  protected DSLGauge gauge;

  /**
   * The cached value of the '{@link #getManaged() <em>Managed</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getManaged()
   * @generated
   * @ordered
   */
  protected DSLManaged managed;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DSLGaugeBelongsToImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SasDslPackage.Literals.DSL_GAUGE_BELONGS_TO;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DSLGauge getGauge()
  {
    if (gauge != null && gauge.eIsProxy())
    {
      InternalEObject oldGauge = (InternalEObject)gauge;
      gauge = (DSLGauge)eResolveProxy(oldGauge);
      if (gauge != oldGauge)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SasDslPackage.DSL_GAUGE_BELONGS_TO__GAUGE, oldGauge, gauge));
      }
    }
    return gauge;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DSLGauge basicGetGauge()
  {
    return gauge;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setGauge(DSLGauge newGauge)
  {
    DSLGauge oldGauge = gauge;
    gauge = newGauge;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SasDslPackage.DSL_GAUGE_BELONGS_TO__GAUGE, oldGauge, gauge));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DSLManaged getManaged()
  {
    if (managed != null && managed.eIsProxy())
    {
      InternalEObject oldManaged = (InternalEObject)managed;
      managed = (DSLManaged)eResolveProxy(oldManaged);
      if (managed != oldManaged)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SasDslPackage.DSL_GAUGE_BELONGS_TO__MANAGED, oldManaged, managed));
      }
    }
    return managed;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DSLManaged basicGetManaged()
  {
    return managed;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setManaged(DSLManaged newManaged)
  {
    DSLManaged oldManaged = managed;
    managed = newManaged;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SasDslPackage.DSL_GAUGE_BELONGS_TO__MANAGED, oldManaged, managed));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SasDslPackage.DSL_GAUGE_BELONGS_TO__GAUGE:
        if (resolve) return getGauge();
        return basicGetGauge();
      case SasDslPackage.DSL_GAUGE_BELONGS_TO__MANAGED:
        if (resolve) return getManaged();
        return basicGetManaged();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SasDslPackage.DSL_GAUGE_BELONGS_TO__GAUGE:
        setGauge((DSLGauge)newValue);
        return;
      case SasDslPackage.DSL_GAUGE_BELONGS_TO__MANAGED:
        setManaged((DSLManaged)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SasDslPackage.DSL_GAUGE_BELONGS_TO__GAUGE:
        setGauge((DSLGauge)null);
        return;
      case SasDslPackage.DSL_GAUGE_BELONGS_TO__MANAGED:
        setManaged((DSLManaged)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SasDslPackage.DSL_GAUGE_BELONGS_TO__GAUGE:
        return gauge != null;
      case SasDslPackage.DSL_GAUGE_BELONGS_TO__MANAGED:
        return managed != null;
    }
    return super.eIsSet(featureID);
  }

} //DSLGaugeBelongsToImpl
