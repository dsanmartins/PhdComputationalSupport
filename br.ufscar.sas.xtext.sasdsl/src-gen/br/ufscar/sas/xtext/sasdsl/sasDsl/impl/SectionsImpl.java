/**
 * generated by Xtext 2.10.0
 */
package br.ufscar.sas.xtext.sasdsl.sasDsl.impl;

import br.ufscar.sas.xtext.sasdsl.sasDsl.Abstractions;
import br.ufscar.sas.xtext.sasdsl.sasDsl.SasDslPackage;
import br.ufscar.sas.xtext.sasdsl.sasDsl.Sections;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Sections</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.ufscar.sas.xtext.sasdsl.sasDsl.impl.SectionsImpl#getAbstractions <em>Abstractions</em>}</li>
 *   <li>{@link br.ufscar.sas.xtext.sasdsl.sasDsl.impl.SectionsImpl#getCompositions <em>Compositions</em>}</li>
 *   <li>{@link br.ufscar.sas.xtext.sasdsl.sasDsl.impl.SectionsImpl#getRestrictions <em>Restrictions</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SectionsImpl extends MinimalEObjectImpl.Container implements Sections
{
  /**
   * The cached value of the '{@link #getAbstractions() <em>Abstractions</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAbstractions()
   * @generated
   * @ordered
   */
  protected Abstractions abstractions;

  /**
   * The default value of the '{@link #getCompositions() <em>Compositions</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCompositions()
   * @generated
   * @ordered
   */
  protected static final String COMPOSITIONS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCompositions() <em>Compositions</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCompositions()
   * @generated
   * @ordered
   */
  protected String compositions = COMPOSITIONS_EDEFAULT;

  /**
   * The default value of the '{@link #getRestrictions() <em>Restrictions</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRestrictions()
   * @generated
   * @ordered
   */
  protected static final String RESTRICTIONS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRestrictions() <em>Restrictions</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRestrictions()
   * @generated
   * @ordered
   */
  protected String restrictions = RESTRICTIONS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SectionsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SasDslPackage.Literals.SECTIONS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Abstractions getAbstractions()
  {
    return abstractions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAbstractions(Abstractions newAbstractions, NotificationChain msgs)
  {
    Abstractions oldAbstractions = abstractions;
    abstractions = newAbstractions;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SasDslPackage.SECTIONS__ABSTRACTIONS, oldAbstractions, newAbstractions);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAbstractions(Abstractions newAbstractions)
  {
    if (newAbstractions != abstractions)
    {
      NotificationChain msgs = null;
      if (abstractions != null)
        msgs = ((InternalEObject)abstractions).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SasDslPackage.SECTIONS__ABSTRACTIONS, null, msgs);
      if (newAbstractions != null)
        msgs = ((InternalEObject)newAbstractions).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SasDslPackage.SECTIONS__ABSTRACTIONS, null, msgs);
      msgs = basicSetAbstractions(newAbstractions, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SasDslPackage.SECTIONS__ABSTRACTIONS, newAbstractions, newAbstractions));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getCompositions()
  {
    return compositions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCompositions(String newCompositions)
  {
    String oldCompositions = compositions;
    compositions = newCompositions;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SasDslPackage.SECTIONS__COMPOSITIONS, oldCompositions, compositions));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getRestrictions()
  {
    return restrictions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRestrictions(String newRestrictions)
  {
    String oldRestrictions = restrictions;
    restrictions = newRestrictions;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SasDslPackage.SECTIONS__RESTRICTIONS, oldRestrictions, restrictions));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SasDslPackage.SECTIONS__ABSTRACTIONS:
        return basicSetAbstractions(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SasDslPackage.SECTIONS__ABSTRACTIONS:
        return getAbstractions();
      case SasDslPackage.SECTIONS__COMPOSITIONS:
        return getCompositions();
      case SasDslPackage.SECTIONS__RESTRICTIONS:
        return getRestrictions();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SasDslPackage.SECTIONS__ABSTRACTIONS:
        setAbstractions((Abstractions)newValue);
        return;
      case SasDslPackage.SECTIONS__COMPOSITIONS:
        setCompositions((String)newValue);
        return;
      case SasDslPackage.SECTIONS__RESTRICTIONS:
        setRestrictions((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SasDslPackage.SECTIONS__ABSTRACTIONS:
        setAbstractions((Abstractions)null);
        return;
      case SasDslPackage.SECTIONS__COMPOSITIONS:
        setCompositions(COMPOSITIONS_EDEFAULT);
        return;
      case SasDslPackage.SECTIONS__RESTRICTIONS:
        setRestrictions(RESTRICTIONS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SasDslPackage.SECTIONS__ABSTRACTIONS:
        return abstractions != null;
      case SasDslPackage.SECTIONS__COMPOSITIONS:
        return COMPOSITIONS_EDEFAULT == null ? compositions != null : !COMPOSITIONS_EDEFAULT.equals(compositions);
      case SasDslPackage.SECTIONS__RESTRICTIONS:
        return RESTRICTIONS_EDEFAULT == null ? restrictions != null : !RESTRICTIONS_EDEFAULT.equals(restrictions);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (compositions: ");
    result.append(compositions);
    result.append(", restrictions: ");
    result.append(restrictions);
    result.append(')');
    return result.toString();
  }

} //SectionsImpl
