/*
 * generated by Xtext 2.10.0
 */
grammar InternalSasDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package br.ufscar.sas.xtext.sasdsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package br.ufscar.sas.xtext.sasdsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import br.ufscar.sas.xtext.sasdsl.services.SasDslGrammarAccess;

}

@parser::members {

 	private SasDslGrammarAccess grammarAccess;

    public InternalSasDslParser(TokenStream input, SasDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "ArchitectureDefinition";
   	}

   	@Override
   	protected SasDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleArchitectureDefinition
entryRuleArchitectureDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArchitectureDefinitionRule()); }
	iv_ruleArchitectureDefinition=ruleArchitectureDefinition
	{ $current=$iv_ruleArchitectureDefinition.current; }
	EOF;

// Rule ArchitectureDefinition
ruleArchitectureDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Abstractions'
		{
			newLeafNode(otherlv_0, grammarAccess.getArchitectureDefinitionAccess().getAbstractionsKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getArchitectureDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArchitectureDefinitionAccess().getAbstractionsDSLAbstractionsParserRuleCall_2_0());
				}
				lv_abstractions_2_0=ruleDSLAbstractions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArchitectureDefinitionRule());
					}
					add(
						$current,
						"abstractions",
						lv_abstractions_2_0,
						"br.ufscar.sas.xtext.sasdsl.SasDsl.DSLAbstractions");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_3='Compositions'
		{
			newLeafNode(otherlv_3, grammarAccess.getArchitectureDefinitionAccess().getCompositionsKeyword_3());
		}
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getArchitectureDefinitionAccess().getColonKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArchitectureDefinitionAccess().getCompositionsDSLCompositionsParserRuleCall_5_0());
				}
				lv_compositions_5_0=ruleDSLCompositions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArchitectureDefinitionRule());
					}
					add(
						$current,
						"compositions",
						lv_compositions_5_0,
						"br.ufscar.sas.xtext.sasdsl.SasDsl.DSLCompositions");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='Restrictions'
		{
			newLeafNode(otherlv_6, grammarAccess.getArchitectureDefinitionAccess().getRestrictionsKeyword_6());
		}
		otherlv_7=':'
		{
			newLeafNode(otherlv_7, grammarAccess.getArchitectureDefinitionAccess().getColonKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArchitectureDefinitionAccess().getDslRestrictionsDSLRestrictionsParserRuleCall_8_0());
				}
				lv_dslRestrictions_8_0=ruleDSLRestrictions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArchitectureDefinitionRule());
					}
					add(
						$current,
						"dslRestrictions",
						lv_dslRestrictions_8_0,
						"br.ufscar.sas.xtext.sasdsl.SasDsl.DSLRestrictions");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleDSLAbstractions
entryRuleDSLAbstractions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDSLAbstractionsRule()); }
	iv_ruleDSLAbstractions=ruleDSLAbstractions
	{ $current=$iv_ruleDSLAbstractions.current; }
	EOF;

// Rule DSLAbstractions
ruleDSLAbstractions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDSLAbstractionsAccess().getDSLManagingParserRuleCall_0());
		}
		this_DSLManaging_0=ruleDSLManaging
		{
			$current = $this_DSLManaging_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDSLAbstractionsAccess().getDSLManagedParserRuleCall_1());
		}
		this_DSLManaged_1=ruleDSLManaged
		{
			$current = $this_DSLManaged_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDSLAbstractionsAccess().getDSLControlLoopManagerParserRuleCall_2());
		}
		this_DSLControlLoopManager_2=ruleDSLControlLoopManager
		{
			$current = $this_DSLControlLoopManager_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDSLAbstractionsAccess().getDSLControlLoopParserRuleCall_3());
		}
		this_DSLControlLoop_3=ruleDSLControlLoop
		{
			$current = $this_DSLControlLoop_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDSLAbstractionsAccess().getDSLMonitorParserRuleCall_4());
		}
		this_DSLMonitor_4=ruleDSLMonitor
		{
			$current = $this_DSLMonitor_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDSLAbstractionsAccess().getDSLAnalyzerParserRuleCall_5());
		}
		this_DSLAnalyzer_5=ruleDSLAnalyzer
		{
			$current = $this_DSLAnalyzer_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDSLAbstractionsAccess().getDSLPlannerParserRuleCall_6());
		}
		this_DSLPlanner_6=ruleDSLPlanner
		{
			$current = $this_DSLPlanner_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDSLAbstractionsAccess().getDSLExecutorParserRuleCall_7());
		}
		this_DSLExecutor_7=ruleDSLExecutor
		{
			$current = $this_DSLExecutor_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDSLAbstractionsAccess().getDSLKnowledgeParserRuleCall_8());
		}
		this_DSLKnowledge_8=ruleDSLKnowledge
		{
			$current = $this_DSLKnowledge_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDSLAbstractionsAccess().getDSLSensorParserRuleCall_9());
		}
		this_DSLSensor_9=ruleDSLSensor
		{
			$current = $this_DSLSensor_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDSLAbstractionsAccess().getDSLEffectorParserRuleCall_10());
		}
		this_DSLEffector_10=ruleDSLEffector
		{
			$current = $this_DSLEffector_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDSLAbstractionsAccess().getDSLProbeParserRuleCall_11());
		}
		this_DSLProbe_11=ruleDSLProbe
		{
			$current = $this_DSLProbe_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDSLAbstractionsAccess().getDSLGaugeParserRuleCall_12());
		}
		this_DSLGauge_12=ruleDSLGauge
		{
			$current = $this_DSLGauge_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDSLAbstractionsAccess().getDSLReferenceInputParserRuleCall_13());
		}
		this_DSLReferenceInput_13=ruleDSLReferenceInput
		{
			$current = $this_DSLReferenceInput_13.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDSLAbstractionsAccess().getDSLMeasuredOutputParserRuleCall_14());
		}
		this_DSLMeasuredOutput_14=ruleDSLMeasuredOutput
		{
			$current = $this_DSLMeasuredOutput_14.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDSLManaging
entryRuleDSLManaging returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDSLManagingRule()); }
	iv_ruleDSLManaging=ruleDSLManaging
	{ $current=$iv_ruleDSLManaging.current; }
	EOF;

// Rule DSLManaging
ruleDSLManaging returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Managing'
		{
			newLeafNode(otherlv_0, grammarAccess.getDSLManagingAccess().getManagingKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDSLManagingAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDSLManagingRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getDSLManagingAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleDSLManaged
entryRuleDSLManaged returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDSLManagedRule()); }
	iv_ruleDSLManaged=ruleDSLManaged
	{ $current=$iv_ruleDSLManaged.current; }
	EOF;

// Rule DSLManaged
ruleDSLManaged returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Managed'
		{
			newLeafNode(otherlv_0, grammarAccess.getDSLManagedAccess().getManagedKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDSLManagedAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDSLManagedRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getDSLManagedAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleDSLControlLoopManager
entryRuleDSLControlLoopManager returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDSLControlLoopManagerRule()); }
	iv_ruleDSLControlLoopManager=ruleDSLControlLoopManager
	{ $current=$iv_ruleDSLControlLoopManager.current; }
	EOF;

// Rule DSLControlLoopManager
ruleDSLControlLoopManager returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ControlLoopManager'
		{
			newLeafNode(otherlv_0, grammarAccess.getDSLControlLoopManagerAccess().getControlLoopManagerKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDSLControlLoopManagerAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDSLControlLoopManagerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='typeOf'
		{
			newLeafNode(otherlv_2, grammarAccess.getDSLControlLoopManagerAccess().getTypeOfKeyword_2());
		}
		{
			newCompositeNode(grammarAccess.getDSLControlLoopManagerAccess().getDSLTypeCLMParserRuleCall_3());
		}
		ruleDSLTypeCLM
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getDSLControlLoopManagerAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleDSLTypeCLM
entryRuleDSLTypeCLM returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDSLTypeCLMRule()); }
	iv_ruleDSLTypeCLM=ruleDSLTypeCLM
	{ $current=$iv_ruleDSLTypeCLM.current.getText(); }
	EOF;

// Rule DSLTypeCLM
ruleDSLTypeCLM returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='Synchronized'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDSLTypeCLMAccess().getSynchronizedKeyword_0());
		}
		    |
		kw='Coordinated'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDSLTypeCLMAccess().getCoordinatedKeyword_1());
		}
		    |
		kw='Independent'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDSLTypeCLMAccess().getIndependentKeyword_2());
		}
	)
;

// Entry rule entryRuleDSLControlLoop
entryRuleDSLControlLoop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDSLControlLoopRule()); }
	iv_ruleDSLControlLoop=ruleDSLControlLoop
	{ $current=$iv_ruleDSLControlLoop.current; }
	EOF;

// Rule DSLControlLoop
ruleDSLControlLoop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ControlLoop'
		{
			newLeafNode(otherlv_0, grammarAccess.getDSLControlLoopAccess().getControlLoopKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDSLControlLoopAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDSLControlLoopRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getDSLControlLoopAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleDSLMonitor
entryRuleDSLMonitor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDSLMonitorRule()); }
	iv_ruleDSLMonitor=ruleDSLMonitor
	{ $current=$iv_ruleDSLMonitor.current; }
	EOF;

// Rule DSLMonitor
ruleDSLMonitor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Monitor'
		{
			newLeafNode(otherlv_0, grammarAccess.getDSLMonitorAccess().getMonitorKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDSLMonitorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDSLMonitorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getDSLMonitorAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleDSLAnalyzer
entryRuleDSLAnalyzer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDSLAnalyzerRule()); }
	iv_ruleDSLAnalyzer=ruleDSLAnalyzer
	{ $current=$iv_ruleDSLAnalyzer.current; }
	EOF;

// Rule DSLAnalyzer
ruleDSLAnalyzer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Analyzer'
		{
			newLeafNode(otherlv_0, grammarAccess.getDSLAnalyzerAccess().getAnalyzerKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDSLAnalyzerAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDSLAnalyzerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getDSLAnalyzerAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleDSLPlanner
entryRuleDSLPlanner returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDSLPlannerRule()); }
	iv_ruleDSLPlanner=ruleDSLPlanner
	{ $current=$iv_ruleDSLPlanner.current; }
	EOF;

// Rule DSLPlanner
ruleDSLPlanner returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Planner'
		{
			newLeafNode(otherlv_0, grammarAccess.getDSLPlannerAccess().getPlannerKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDSLPlannerAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDSLPlannerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getDSLPlannerAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleDSLExecutor
entryRuleDSLExecutor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDSLExecutorRule()); }
	iv_ruleDSLExecutor=ruleDSLExecutor
	{ $current=$iv_ruleDSLExecutor.current; }
	EOF;

// Rule DSLExecutor
ruleDSLExecutor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Executor'
		{
			newLeafNode(otherlv_0, grammarAccess.getDSLExecutorAccess().getExecutorKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDSLExecutorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDSLExecutorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getDSLExecutorAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleDSLKnowledge
entryRuleDSLKnowledge returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDSLKnowledgeRule()); }
	iv_ruleDSLKnowledge=ruleDSLKnowledge
	{ $current=$iv_ruleDSLKnowledge.current; }
	EOF;

// Rule DSLKnowledge
ruleDSLKnowledge returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Knowledge'
		{
			newLeafNode(otherlv_0, grammarAccess.getDSLKnowledgeAccess().getKnowledgeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDSLKnowledgeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDSLKnowledgeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getDSLKnowledgeAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleDSLSensor
entryRuleDSLSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDSLSensorRule()); }
	iv_ruleDSLSensor=ruleDSLSensor
	{ $current=$iv_ruleDSLSensor.current; }
	EOF;

// Rule DSLSensor
ruleDSLSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Sensor'
		{
			newLeafNode(otherlv_0, grammarAccess.getDSLSensorAccess().getSensorKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDSLSensorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDSLSensorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getDSLSensorAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleDSLEffector
entryRuleDSLEffector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDSLEffectorRule()); }
	iv_ruleDSLEffector=ruleDSLEffector
	{ $current=$iv_ruleDSLEffector.current; }
	EOF;

// Rule DSLEffector
ruleDSLEffector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Effector'
		{
			newLeafNode(otherlv_0, grammarAccess.getDSLEffectorAccess().getEffectorKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDSLEffectorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDSLEffectorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getDSLEffectorAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleDSLProbe
entryRuleDSLProbe returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDSLProbeRule()); }
	iv_ruleDSLProbe=ruleDSLProbe
	{ $current=$iv_ruleDSLProbe.current; }
	EOF;

// Rule DSLProbe
ruleDSLProbe returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Probe'
		{
			newLeafNode(otherlv_0, grammarAccess.getDSLProbeAccess().getProbeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDSLProbeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDSLProbeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getDSLProbeAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleDSLGauge
entryRuleDSLGauge returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDSLGaugeRule()); }
	iv_ruleDSLGauge=ruleDSLGauge
	{ $current=$iv_ruleDSLGauge.current; }
	EOF;

// Rule DSLGauge
ruleDSLGauge returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Gauge'
		{
			newLeafNode(otherlv_0, grammarAccess.getDSLGaugeAccess().getGaugeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDSLGaugeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDSLGaugeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getDSLGaugeAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleDSLReferenceInput
entryRuleDSLReferenceInput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDSLReferenceInputRule()); }
	iv_ruleDSLReferenceInput=ruleDSLReferenceInput
	{ $current=$iv_ruleDSLReferenceInput.current; }
	EOF;

// Rule DSLReferenceInput
ruleDSLReferenceInput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ReferenceInput'
		{
			newLeafNode(otherlv_0, grammarAccess.getDSLReferenceInputAccess().getReferenceInputKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDSLReferenceInputAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDSLReferenceInputRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getDSLReferenceInputAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleDSLMeasuredOutput
entryRuleDSLMeasuredOutput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDSLMeasuredOutputRule()); }
	iv_ruleDSLMeasuredOutput=ruleDSLMeasuredOutput
	{ $current=$iv_ruleDSLMeasuredOutput.current; }
	EOF;

// Rule DSLMeasuredOutput
ruleDSLMeasuredOutput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MeasuredOutput'
		{
			newLeafNode(otherlv_0, grammarAccess.getDSLMeasuredOutputAccess().getMeasuredOutputKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDSLMeasuredOutputAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDSLMeasuredOutputRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getDSLMeasuredOutputAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleDSLCompositions
entryRuleDSLCompositions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDSLCompositionsRule()); }
	iv_ruleDSLCompositions=ruleDSLCompositions
	{ $current=$iv_ruleDSLCompositions.current; }
	EOF;

// Rule DSLCompositions
ruleDSLCompositions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDSLCompositionsRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getDSLCompositionsAccess().getSensorDSLAbstractionsCrossReference_0_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDSLCompositionsAccess().getMustBeInMustBeInParserRuleCall_1_0());
				}
				lv_mustBeIn_1_0=ruleMustBeIn
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDSLCompositionsRule());
					}
					set(
						$current,
						"mustBeIn",
						lv_mustBeIn_1_0,
						"br.ufscar.sas.xtext.sasdsl.SasDsl.MustBeIn");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDSLCompositionsRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getDSLCompositionsAccess().getMonitorDSLAbstractionsCrossReference_2_0());
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getDSLCompositionsAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleDSLRestrictions
entryRuleDSLRestrictions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDSLRestrictionsRule()); }
	iv_ruleDSLRestrictions=ruleDSLRestrictions
	{ $current=$iv_ruleDSLRestrictions.current; }
	EOF;

// Rule DSLRestrictions
ruleDSLRestrictions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDSLRestrictionsAccess().getOnlyOnlyParserRuleCall_0_0_0());
					}
					lv_only_0_0=ruleOnly
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDSLRestrictionsRule());
						}
						set(
							$current,
							"only",
							lv_only_0_0,
							"br.ufscar.sas.xtext.sasdsl.SasDsl.Only");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDSLRestrictionsRule());
						}
					}
					otherlv_1=RULE_ID
					{
						newLeafNode(otherlv_1, grammarAccess.getDSLRestrictionsAccess().getTDSLAbstractionsCrossReference_0_1_0());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDSLRestrictionsAccess().getCanCanParserRuleCall_0_2_0());
					}
					lv_can_2_0=ruleCan
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDSLRestrictionsRule());
						}
						set(
							$current,
							"can",
							lv_can_2_0,
							"br.ufscar.sas.xtext.sasdsl.SasDsl.Can");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDSLRestrictionsAccess().getElementTypeElementTypeParserRuleCall_0_3_0());
					}
					lv_elementType_3_0=ruleElementType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDSLRestrictionsRule());
						}
						set(
							$current,
							"elementType",
							lv_elementType_3_0,
							"br.ufscar.sas.xtext.sasdsl.SasDsl.ElementType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDSLRestrictionsRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getDSLRestrictionsAccess().getTypeDSLAbstractionsCrossReference_0_4_0());
					}
				)
			)
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getDSLRestrictionsAccess().getSemicolonKeyword_0_5());
			}
		)
		    |
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDSLRestrictionsRule());
						}
					}
					otherlv_6=RULE_ID
					{
						newLeafNode(otherlv_6, grammarAccess.getDSLRestrictionsAccess().getTDSLAbstractionsCrossReference_1_0_0());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDSLRestrictionsAccess().getCannotCannotParserRuleCall_1_1_0());
					}
					lv_cannot_7_0=ruleCannot
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDSLRestrictionsRule());
						}
						set(
							$current,
							"cannot",
							lv_cannot_7_0,
							"br.ufscar.sas.xtext.sasdsl.SasDsl.Cannot");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDSLRestrictionsAccess().getElementTypeElementTypeParserRuleCall_1_2_0());
					}
					lv_elementType_8_0=ruleElementType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDSLRestrictionsRule());
						}
						set(
							$current,
							"elementType",
							lv_elementType_8_0,
							"br.ufscar.sas.xtext.sasdsl.SasDsl.ElementType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDSLRestrictionsRule());
						}
					}
					otherlv_9=RULE_ID
					{
						newLeafNode(otherlv_9, grammarAccess.getDSLRestrictionsAccess().getTypeDSLAbstractionsCrossReference_1_3_0());
					}
				)
			)
			otherlv_10=';'
			{
				newLeafNode(otherlv_10, grammarAccess.getDSLRestrictionsAccess().getSemicolonKeyword_1_4());
			}
		)
		    |
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDSLRestrictionsRule());
						}
					}
					otherlv_11=RULE_ID
					{
						newLeafNode(otherlv_11, grammarAccess.getDSLRestrictionsAccess().getTDSLAbstractionsCrossReference_2_0_0());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDSLRestrictionsAccess().getCanCanParserRuleCall_2_1_0());
					}
					lv_can_12_0=ruleCan
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDSLRestrictionsRule());
						}
						set(
							$current,
							"can",
							lv_can_12_0,
							"br.ufscar.sas.xtext.sasdsl.SasDsl.Can");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDSLRestrictionsAccess().getElementTypeElementTypeParserRuleCall_2_2_0());
					}
					lv_elementType_13_0=ruleElementType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDSLRestrictionsRule());
						}
						set(
							$current,
							"elementType",
							lv_elementType_13_0,
							"br.ufscar.sas.xtext.sasdsl.SasDsl.ElementType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDSLRestrictionsRule());
						}
					}
					otherlv_14=RULE_ID
					{
						newLeafNode(otherlv_14, grammarAccess.getDSLRestrictionsAccess().getTypeDSLAbstractionsCrossReference_2_3_0());
					}
				)
			)
			otherlv_15=';'
			{
				newLeafNode(otherlv_15, grammarAccess.getDSLRestrictionsAccess().getSemicolonKeyword_2_4());
			}
		)
		    |
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDSLRestrictionsRule());
						}
					}
					otherlv_16=RULE_ID
					{
						newLeafNode(otherlv_16, grammarAccess.getDSLRestrictionsAccess().getTDSLAbstractionsCrossReference_3_0_0());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDSLRestrictionsAccess().getCanCanParserRuleCall_3_1_0());
					}
					lv_can_17_0=ruleCan
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDSLRestrictionsRule());
						}
						set(
							$current,
							"can",
							lv_can_17_0,
							"br.ufscar.sas.xtext.sasdsl.SasDsl.Can");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDSLRestrictionsAccess().getElementTypeElementTypeParserRuleCall_3_2_0());
					}
					lv_elementType_18_0=ruleElementType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDSLRestrictionsRule());
						}
						set(
							$current,
							"elementType",
							lv_elementType_18_0,
							"br.ufscar.sas.xtext.sasdsl.SasDsl.ElementType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDSLRestrictionsAccess().getOnly2Only2ParserRuleCall_3_3_0());
					}
					lv_only2_19_0=ruleOnly2
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDSLRestrictionsRule());
						}
						set(
							$current,
							"only2",
							lv_only2_19_0,
							"br.ufscar.sas.xtext.sasdsl.SasDsl.Only2");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDSLRestrictionsRule());
						}
					}
					otherlv_20=RULE_ID
					{
						newLeafNode(otherlv_20, grammarAccess.getDSLRestrictionsAccess().getTypeDSLAbstractionsCrossReference_3_4_0());
					}
				)
			)
			otherlv_21=';'
			{
				newLeafNode(otherlv_21, grammarAccess.getDSLRestrictionsAccess().getSemicolonKeyword_3_5());
			}
		)
		    |
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDSLRestrictionsRule());
						}
					}
					otherlv_22=RULE_ID
					{
						newLeafNode(otherlv_22, grammarAccess.getDSLRestrictionsAccess().getTDSLAbstractionsCrossReference_4_0_0());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDSLRestrictionsAccess().getMustMustParserRuleCall_4_1_0());
					}
					lv_must_23_0=ruleMust
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDSLRestrictionsRule());
						}
						set(
							$current,
							"must",
							lv_must_23_0,
							"br.ufscar.sas.xtext.sasdsl.SasDsl.Must");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDSLRestrictionsAccess().getEntityTypeEntityTypeParserRuleCall_4_2_0());
					}
					lv_entityType_24_0=ruleEntityType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDSLRestrictionsRule());
						}
						set(
							$current,
							"entityType",
							lv_entityType_24_0,
							"br.ufscar.sas.xtext.sasdsl.SasDsl.EntityType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDSLRestrictionsRule());
						}
					}
					otherlv_25=RULE_ID
					{
						newLeafNode(otherlv_25, grammarAccess.getDSLRestrictionsAccess().getTypeDSLAbstractionsCrossReference_4_3_0());
					}
				)
			)
			otherlv_26=';'
			{
				newLeafNode(otherlv_26, grammarAccess.getDSLRestrictionsAccess().getSemicolonKeyword_4_4());
			}
		)
	)
;

// Entry rule entryRuleMustBeIn
entryRuleMustBeIn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMustBeInRule()); }
	iv_ruleMustBeIn=ruleMustBeIn
	{ $current=$iv_ruleMustBeIn.current; }
	EOF;

// Rule MustBeIn
ruleMustBeIn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_mustBeIn_0_0='must-be-in'
			{
				newLeafNode(lv_mustBeIn_0_0, grammarAccess.getMustBeInAccess().getMustBeInMustBeInKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getMustBeInRule());
				}
				setWithLastConsumed($current, "mustBeIn", lv_mustBeIn_0_0, "must-be-in");
			}
		)
	)
;

// Entry rule entryRuleOnly
entryRuleOnly returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOnlyRule()); }
	iv_ruleOnly=ruleOnly
	{ $current=$iv_ruleOnly.current; }
	EOF;

// Rule Only
ruleOnly returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_only_0_0='only'
			{
				newLeafNode(lv_only_0_0, grammarAccess.getOnlyAccess().getOnlyOnlyKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getOnlyRule());
				}
				setWithLastConsumed($current, "only", lv_only_0_0, "only");
			}
		)
	)
;

// Entry rule entryRuleCan
entryRuleCan returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCanRule()); }
	iv_ruleCan=ruleCan
	{ $current=$iv_ruleCan.current; }
	EOF;

// Rule Can
ruleCan returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_can_0_0='can-'
			{
				newLeafNode(lv_can_0_0, grammarAccess.getCanAccess().getCanCanKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getCanRule());
				}
				setWithLastConsumed($current, "can", lv_can_0_0, "can-");
			}
		)
	)
;

// Entry rule entryRuleCannot
entryRuleCannot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCannotRule()); }
	iv_ruleCannot=ruleCannot
	{ $current=$iv_ruleCannot.current; }
	EOF;

// Rule Cannot
ruleCannot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_cannot_0_0='cannot-'
			{
				newLeafNode(lv_cannot_0_0, grammarAccess.getCannotAccess().getCannotCannotKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getCannotRule());
				}
				setWithLastConsumed($current, "cannot", lv_cannot_0_0, "cannot-");
			}
		)
	)
;

// Entry rule entryRuleOnly2
entryRuleOnly2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOnly2Rule()); }
	iv_ruleOnly2=ruleOnly2
	{ $current=$iv_ruleOnly2.current; }
	EOF;

// Rule Only2
ruleOnly2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_only2_0_0='-only'
			{
				newLeafNode(lv_only2_0_0, grammarAccess.getOnly2Access().getOnly2OnlyKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getOnly2Rule());
				}
				setWithLastConsumed($current, "only2", lv_only2_0_0, "-only");
			}
		)
	)
;

// Entry rule entryRuleMust
entryRuleMust returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMustRule()); }
	iv_ruleMust=ruleMust
	{ $current=$iv_ruleMust.current; }
	EOF;

// Rule Must
ruleMust returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_must_0_0='must-'
			{
				newLeafNode(lv_must_0_0, grammarAccess.getMustAccess().getMustMustKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getMustRule());
				}
				setWithLastConsumed($current, "must", lv_must_0_0, "must-");
			}
		)
	)
;

// Entry rule entryRuleElementType
entryRuleElementType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementTypeRule()); }
	iv_ruleElementType=ruleElementType
	{ $current=$iv_ruleElementType.current; }
	EOF;

// Rule ElementType
ruleElementType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementTypeAccess().getBasicTypeParserRuleCall_0());
		}
		this_BasicType_0=ruleBasicType
		{
			$current = $this_BasicType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementTypeAccess().getEntityTypeParserRuleCall_1());
		}
		this_EntityType_1=ruleEntityType
		{
			$current = $this_EntityType_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBasicType
entryRuleBasicType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBasicTypeRule()); }
	iv_ruleBasicType=ruleBasicType
	{ $current=$iv_ruleBasicType.current; }
	EOF;

// Rule BasicType
ruleBasicType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_typeName_0_1='access'
				{
					newLeafNode(lv_typeName_0_1, grammarAccess.getBasicTypeAccess().getTypeNameAccessKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBasicTypeRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_1, null);
				}
				    |
				lv_typeName_0_2='declare'
				{
					newLeafNode(lv_typeName_0_2, grammarAccess.getBasicTypeAccess().getTypeNameDeclareKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBasicTypeRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_2, null);
				}
				    |
				lv_typeName_0_3='handle'
				{
					newLeafNode(lv_typeName_0_3, grammarAccess.getBasicTypeAccess().getTypeNameHandleKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBasicTypeRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_3, null);
				}
				    |
				lv_typeName_0_4='create'
				{
					newLeafNode(lv_typeName_0_4, grammarAccess.getBasicTypeAccess().getTypeNameCreateKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBasicTypeRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_4, null);
				}
				    |
				lv_typeName_0_5='depend'
				{
					newLeafNode(lv_typeName_0_5, grammarAccess.getBasicTypeAccess().getTypeNameDependKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBasicTypeRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_5, null);
				}
			)
		)
	)
;

// Entry rule entryRuleEntityType
entryRuleEntityType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityTypeRule()); }
	iv_ruleEntityType=ruleEntityType
	{ $current=$iv_ruleEntityType.current; }
	EOF;

// Rule EntityType
ruleEntityType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_entity_0_1='extend'
				{
					newLeafNode(lv_entity_0_1, grammarAccess.getEntityTypeAccess().getEntityExtendKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityTypeRule());
					}
					setWithLastConsumed($current, "entity", lv_entity_0_1, null);
				}
				    |
				lv_entity_0_2='implement'
				{
					newLeafNode(lv_entity_0_2, grammarAccess.getEntityTypeAccess().getEntityImplementKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityTypeRule());
					}
					setWithLastConsumed($current, "entity", lv_entity_0_2, null);
				}
				    |
				lv_entity_0_3='derive'
				{
					newLeafNode(lv_entity_0_3, grammarAccess.getEntityTypeAccess().getEntityDeriveKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityTypeRule());
					}
					setWithLastConsumed($current, "entity", lv_entity_0_3, null);
				}
				    |
				lv_entity_0_4='throw'
				{
					newLeafNode(lv_entity_0_4, grammarAccess.getEntityTypeAccess().getEntityThrowKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityTypeRule());
					}
					setWithLastConsumed($current, "entity", lv_entity_0_4, null);
				}
				    |
				lv_entity_0_5='useannotation'
				{
					newLeafNode(lv_entity_0_5, grammarAccess.getEntityTypeAccess().getEntityUseannotationKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityTypeRule());
					}
					setWithLastConsumed($current, "entity", lv_entity_0_5, null);
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
